{"rendered": {"description": {"raw": "* Add GPS sensor to each robot, with spherical coordinates set to Camp Roberts.\r\n* In RobotPlugin, grab a pointer to the GPS sensor.\r\n* Add new call, RobotPlugin::Pose() to return the pose data to the user.\r\n* Add new tag `<swarm_search_area>` to each vehicle plugin, defining relative min and max lat/long (relative to the origin as specified by `<spherical_coordinates>`).  It's a little strange to repeat this information in each vehicle plugin, but it can't go in the `<world>` without changing how SDF parsing works (it strictly follows the known element descriptions).  In any case, using `erb` to only define the string in one place works fine.\r\n* Add new call, RobotPlugin::SearchArea() to return the region data to the user.\r\n* Exercise the new calls in `example/TeamControllerPlugin.cc`.\r\n* Rename the `*_35*` files to `*_36*` (because they actually have 36 robots each).\r\n\r\n~~*Note: this PR is built atop pull request #7, which should be merged first. Here's a [better diff](#!/osrf/swarm/branch/add_gps?dest=run_erb#diff).*~~\r\n\r\nTo test this change, be sure to build and install the latest `example` controller:\r\n\r\n~~~\r\ncd build\r\nmake\r\nsudo make install\r\ncd ../example/build\r\nmake\r\nsudo make install\r\ngzserver worlds/fixed_simple_36.world --verbose\r\n~~~\r\n\r\nYou should see GPS and search area data from one robot, similar to:\r\n\r\n~~~\r\n[Msg] [192.168.2.1] lat long alt: 35.7753 -120.774 210.936\r\n[Msg] [192.168.2.1] search area: 35.7653 35.7853 -120.784 -120.764\r\n[Msg] [192.168.2.1] lat long alt: 35.7753 -120.774 210.946\r\n[Msg] [192.168.2.1] search area: 35.7653 35.7853 -120.784 -120.764\r\n~~~", "markup": "markdown", "html": "<ul>\n<li>Add GPS sensor to each robot, with spherical coordinates set to Camp Roberts.</li>\n<li>In RobotPlugin, grab a pointer to the GPS sensor.</li>\n<li>Add new call, RobotPlugin::Pose() to return the pose data to the user.</li>\n<li>Add new tag <code>&lt;swarm_search_area&gt;</code> to each vehicle plugin, defining relative min and max lat/long (relative to the origin as specified by <code>&lt;spherical_coordinates&gt;</code>).  It's a little strange to repeat this information in each vehicle plugin, but it can't go in the <code>&lt;world&gt;</code> without changing how SDF parsing works (it strictly follows the known element descriptions).  In any case, using <code>erb</code> to only define the string in one place works fine.</li>\n<li>Add new call, RobotPlugin::SearchArea() to return the region data to the user.</li>\n<li>Exercise the new calls in <code>example/TeamControllerPlugin.cc</code>.</li>\n<li>Rename the <code>*_35*</code> files to <code>*_36*</code> (because they actually have 36 robots each).</li>\n</ul>\n<p><del><em>Note: this PR is built atop <a href=\"#!/osrf/swarm/pull-requests/7/run-erb-on-worlderb-files\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #7</a>, which should be merged first. Here's a <a data-is-external-link=\"true\" href=\"#!/osrf/swarm/branch/add_gps?dest=run_erb#diff\" rel=\"nofollow\">better diff</a>.</em></del></p>\n<p>To test this change, be sure to build and install the latest <code>example</code> controller:</p>\n<div class=\"codehilite\"><pre><span></span>cd build\nmake\nsudo make install\ncd ../example/build\nmake\nsudo make install\ngzserver worlds/fixed_simple_36.world --verbose\n</pre></div>\n\n\n<p>You should see GPS and search area data from one robot, similar to:</p>\n<div class=\"codehilite\"><pre><span></span>[Msg] [192.168.2.1] lat long alt: 35.7753 -120.774 210.936\n[Msg] [192.168.2.1] search area: 35.7653 35.7853 -120.784 -120.764\n[Msg] [192.168.2.1] lat long alt: 35.7753 -120.774 210.946\n[Msg] [192.168.2.1] search area: 35.7653 35.7853 -120.784 -120.764\n</pre></div>", "type": "rendered"}, "title": {"raw": "Add GPS and search area", "markup": "markdown", "html": "<p>Add GPS and search area</p>", "type": "rendered"}}, "type": "pullrequest", "description": "* Add GPS sensor to each robot, with spherical coordinates set to Camp Roberts.\r\n* In RobotPlugin, grab a pointer to the GPS sensor.\r\n* Add new call, RobotPlugin::Pose() to return the pose data to the user.\r\n* Add new tag `<swarm_search_area>` to each vehicle plugin, defining relative min and max lat/long (relative to the origin as specified by `<spherical_coordinates>`).  It's a little strange to repeat this information in each vehicle plugin, but it can't go in the `<world>` without changing how SDF parsing works (it strictly follows the known element descriptions).  In any case, using `erb` to only define the string in one place works fine.\r\n* Add new call, RobotPlugin::SearchArea() to return the region data to the user.\r\n* Exercise the new calls in `example/TeamControllerPlugin.cc`.\r\n* Rename the `*_35*` files to `*_36*` (because they actually have 36 robots each).\r\n\r\n~~*Note: this PR is built atop pull request #7, which should be merged first. Here's a [better diff](#!/osrf/swarm/branch/add_gps?dest=run_erb#diff).*~~\r\n\r\nTo test this change, be sure to build and install the latest `example` controller:\r\n\r\n~~~\r\ncd build\r\nmake\r\nsudo make install\r\ncd ../example/build\r\nmake\r\nsudo make install\r\ngzserver worlds/fixed_simple_36.world --verbose\r\n~~~\r\n\r\nYou should see GPS and search area data from one robot, similar to:\r\n\r\n~~~\r\n[Msg] [192.168.2.1] lat long alt: 35.7753 -120.774 210.936\r\n[Msg] [192.168.2.1] search area: 35.7653 35.7853 -120.784 -120.764\r\n[Msg] [192.168.2.1] lat long alt: 35.7753 -120.774 210.946\r\n[Msg] [192.168.2.1] search area: 35.7653 35.7853 -120.784 -120.764\r\n~~~", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/pullrequests/9/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/diffstat/osrf/swarm:599fe0ed6917%0D9fcc2c1cf112?from_pullrequest_id=9"}, "commits": {"href": "data/repositories/osrf/swarm/pullrequests/9/commits.json"}, "self": {"href": "data/repositories/osrf/swarm/pullrequests/9.json"}, "comments": {"href": "data/repositories/osrf/swarm/pullrequests/9/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/pullrequests/9/merge"}, "html": {"href": "#!/osrf/swarm/pull-requests/9"}, "activity": {"href": "data/repositories/osrf/swarm/pullrequests/9/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/diff/osrf/swarm:599fe0ed6917%0D9fcc2c1cf112?from_pullrequest_id=9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/pullrequests/9/approve"}, "statuses": {"href": "data/repositories/osrf/swarm/pullrequests/9/statuses_page=1.json"}}, "title": "Add GPS and search area", "close_source_branch": true, "reviewers": [{"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}], "id": 9, "destination": {"commit": {"hash": "9fcc2c1cf112", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/9fcc2c1cf112.json"}, "html": {"href": "#!/osrf/swarm/commits/9fcc2c1cf112"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "default"}}, "created_on": "2015-07-29T01:10:20.940292+00:00", "summary": {"raw": "* Add GPS sensor to each robot, with spherical coordinates set to Camp Roberts.\r\n* In RobotPlugin, grab a pointer to the GPS sensor.\r\n* Add new call, RobotPlugin::Pose() to return the pose data to the user.\r\n* Add new tag `<swarm_search_area>` to each vehicle plugin, defining relative min and max lat/long (relative to the origin as specified by `<spherical_coordinates>`).  It's a little strange to repeat this information in each vehicle plugin, but it can't go in the `<world>` without changing how SDF parsing works (it strictly follows the known element descriptions).  In any case, using `erb` to only define the string in one place works fine.\r\n* Add new call, RobotPlugin::SearchArea() to return the region data to the user.\r\n* Exercise the new calls in `example/TeamControllerPlugin.cc`.\r\n* Rename the `*_35*` files to `*_36*` (because they actually have 36 robots each).\r\n\r\n~~*Note: this PR is built atop pull request #7, which should be merged first. Here's a [better diff](#!/osrf/swarm/branch/add_gps?dest=run_erb#diff).*~~\r\n\r\nTo test this change, be sure to build and install the latest `example` controller:\r\n\r\n~~~\r\ncd build\r\nmake\r\nsudo make install\r\ncd ../example/build\r\nmake\r\nsudo make install\r\ngzserver worlds/fixed_simple_36.world --verbose\r\n~~~\r\n\r\nYou should see GPS and search area data from one robot, similar to:\r\n\r\n~~~\r\n[Msg] [192.168.2.1] lat long alt: 35.7753 -120.774 210.936\r\n[Msg] [192.168.2.1] search area: 35.7653 35.7853 -120.784 -120.764\r\n[Msg] [192.168.2.1] lat long alt: 35.7753 -120.774 210.946\r\n[Msg] [192.168.2.1] search area: 35.7653 35.7853 -120.784 -120.764\r\n~~~", "markup": "markdown", "html": "<ul>\n<li>Add GPS sensor to each robot, with spherical coordinates set to Camp Roberts.</li>\n<li>In RobotPlugin, grab a pointer to the GPS sensor.</li>\n<li>Add new call, RobotPlugin::Pose() to return the pose data to the user.</li>\n<li>Add new tag <code>&lt;swarm_search_area&gt;</code> to each vehicle plugin, defining relative min and max lat/long (relative to the origin as specified by <code>&lt;spherical_coordinates&gt;</code>).  It's a little strange to repeat this information in each vehicle plugin, but it can't go in the <code>&lt;world&gt;</code> without changing how SDF parsing works (it strictly follows the known element descriptions).  In any case, using <code>erb</code> to only define the string in one place works fine.</li>\n<li>Add new call, RobotPlugin::SearchArea() to return the region data to the user.</li>\n<li>Exercise the new calls in <code>example/TeamControllerPlugin.cc</code>.</li>\n<li>Rename the <code>*_35*</code> files to <code>*_36*</code> (because they actually have 36 robots each).</li>\n</ul>\n<p><del><em>Note: this PR is built atop <a href=\"#!/osrf/swarm/pull-requests/7/run-erb-on-worlderb-files\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #7</a>, which should be merged first. Here's a <a data-is-external-link=\"true\" href=\"#!/osrf/swarm/branch/add_gps?dest=run_erb#diff\" rel=\"nofollow\">better diff</a>.</em></del></p>\n<p>To test this change, be sure to build and install the latest <code>example</code> controller:</p>\n<div class=\"codehilite\"><pre><span></span>cd build\nmake\nsudo make install\ncd ../example/build\nmake\nsudo make install\ngzserver worlds/fixed_simple_36.world --verbose\n</pre></div>\n\n\n<p>You should see GPS and search area data from one robot, similar to:</p>\n<div class=\"codehilite\"><pre><span></span>[Msg] [192.168.2.1] lat long alt: 35.7753 -120.774 210.936\n[Msg] [192.168.2.1] search area: 35.7653 35.7853 -120.784 -120.764\n[Msg] [192.168.2.1] lat long alt: 35.7753 -120.774 210.946\n[Msg] [192.168.2.1] search area: 35.7653 35.7853 -120.784 -120.764\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "ae73672a6845", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/ae73672a6845.json"}, "html": {"href": "#!/osrf/swarm/commits/ae73672a6845"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "add_gps"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2015-07-30T09:20:33.731367+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2015-07-29T16:54:39.539153+00:00", "type": "participant", "approved": false, "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}}], "reason": "", "updated_on": "2015-07-30T17:34:30.106325+00:00", "author": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "merge_commit": {"hash": "599fe0ed6917", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/599fe0ed6917.json"}, "html": {"href": "#!/osrf/swarm/commits/599fe0ed6917"}}}, "closed_by": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}}