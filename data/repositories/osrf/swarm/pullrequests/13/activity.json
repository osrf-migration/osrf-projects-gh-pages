{"pagelen": 50, "values": [{"update": {"description": "* Add an IMU sensor to each robot that returns linear velocity, angular velocity and orientation with respect a reference position (initial position). I've used a combination of an IMU sensor and reading the linear velocity directly from the model.\r\n* Add a compass sensor to each robot that returns the bearing with respect the true North. Gazebo angles work in the range of `PI`, `-PI` but a typical compass seems to work in `0`, `2*PI`. I've used the yaw angle of the robot, translated and normalized it.\r\n* Worlds updated with the new `<imu>` sensors for each model.\r\n* `example/TeamControllerPlugin.cc` updated for using the new `Imu()` and `Bearing()` calls.\r\n\r\nYou can try any of the world files and check the console output to make sure that the IMU/bearing values make sense.\r\n\r\n[Here's the tutorial](#!/osrf/swarm/wiki/Tutorial_6-IMU_bearing_sensor) (need pull request #14).\r\n\r\n**Note:** Using my laptop and launching Gazebo with any of the `*_36.world` was causing Gazebo to freeze. I believe is due to the massive number of `std::cout`s in the `TeamControllerPlugin::OnDataReceived` callback. Maybe we should comment this code to prevent hangs when we have a large team and lots of communication.", "title": "Imu and compass sensors", "destination": {"commit": {"hash": "2612b0400091", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/2612b0400091.json"}, "html": {"href": "#!/osrf/swarm/commits/2612b0400091"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3b6b87ac6e76", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/3b6b87ac6e76.json"}, "html": {"href": "#!/osrf/swarm/commits/3b6b87ac6e76"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "imu"}}, "state": "MERGED", "author": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "date": "2015-08-20T21:33:25.828426+00:00"}, "pull_request": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}}, {"approval": {"date": "2015-08-20T21:32:25.356566+00:00", "pullrequest": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, "pull_request": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}}, {"update": {"description": "* Add an IMU sensor to each robot that returns linear velocity, angular velocity and orientation with respect a reference position (initial position). I've used a combination of an IMU sensor and reading the linear velocity directly from the model.\r\n* Add a compass sensor to each robot that returns the bearing with respect the true North. Gazebo angles work in the range of `PI`, `-PI` but a typical compass seems to work in `0`, `2*PI`. I've used the yaw angle of the robot, translated and normalized it.\r\n* Worlds updated with the new `<imu>` sensors for each model.\r\n* `example/TeamControllerPlugin.cc` updated for using the new `Imu()` and `Bearing()` calls.\r\n\r\nYou can try any of the world files and check the console output to make sure that the IMU/bearing values make sense.\r\n\r\n[Here's the tutorial](#!/osrf/swarm/wiki/Tutorial_6-IMU_bearing_sensor) (need pull request #14).\r\n\r\n**Note:** Using my laptop and launching Gazebo with any of the `*_36.world` was causing Gazebo to freeze. I believe is due to the massive number of `std::cout`s in the `TeamControllerPlugin::OnDataReceived` callback. Maybe we should comment this code to prevent hangs when we have a large team and lots of communication.", "title": "Imu and compass sensors", "destination": {"commit": {"hash": "e1f0ed80febd", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/e1f0ed80febd.json"}, "html": {"href": "#!/osrf/swarm/commits/e1f0ed80febd"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3b6b87ac6e76", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/3b6b87ac6e76.json"}, "html": {"href": "#!/osrf/swarm/commits/3b6b87ac6e76"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "imu"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-08-18T21:04:02.743444+00:00"}, "pull_request": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13/comments/9189614.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13/_/diff#comment-9189614"}}, "parent": {"id": 9187136, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13/comments/9187136.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13/_/diff#comment-9187136"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}, "content": {"raw": "Done in 827a39b", "markup": "markdown", "html": "<p>Done in <a href=\"#!/osrf/swarm/commits/827a39b\" rel=\"nofollow\" class=\"ap-connect-link\">827a39b</a></p>", "type": "rendered"}, "created_on": "2015-08-18T20:56:55.000679+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2015-08-18T20:56:55.009286+00:00", "type": "pullrequest_comment", "id": 9189614}, "pull_request": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13/comments/9189576.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13/_/diff#comment-9189576"}}, "parent": {"id": 9187156, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13/comments/9187156.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13/_/diff#comment-9187156"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}, "content": {"raw": "Originally I thought it was a more simple API with less dependencies but I think you're right, it's a minor change and it's more flexible. I did the same thing with `Bearing()` (I converted the output parameter to an `ignition::math::Angle`.\n\n827a39b", "markup": "markdown", "html": "<p>Originally I thought it was a more simple API with less dependencies but I think you're right, it's a minor change and it's more flexible. I did the same thing with <code>Bearing()</code> (I converted the output parameter to an <code>ignition::math::Angle</code>.</p>\n<p><a href=\"#!/osrf/swarm/commits/827a39b\" rel=\"nofollow\" class=\"ap-connect-link\">827a39b</a></p>", "type": "rendered"}, "created_on": "2015-08-18T20:55:54.103994+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2015-08-18T20:55:54.112264+00:00", "type": "pullrequest_comment", "id": 9189576}, "pull_request": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}}, {"update": {"description": "* Add an IMU sensor to each robot that returns linear velocity, angular velocity and orientation with respect a reference position (initial position). I've used a combination of an IMU sensor and reading the linear velocity directly from the model.\r\n* Add a compass sensor to each robot that returns the bearing with respect the true North. Gazebo angles work in the range of `PI`, `-PI` but a typical compass seems to work in `0`, `2*PI`. I've used the yaw angle of the robot, translated and normalized it.\r\n* Worlds updated with the new `<imu>` sensors for each model.\r\n* `example/TeamControllerPlugin.cc` updated for using the new `Imu()` and `Bearing()` calls.\r\n\r\nYou can try any of the world files and check the console output to make sure that the IMU/bearing values make sense.\r\n\r\n[Here's the tutorial](#!/osrf/swarm/wiki/Tutorial_6-IMU_bearing_sensor) (need pull request #14).\r\n\r\n**Note:** Using my laptop and launching Gazebo with any of the `*_36.world` was causing Gazebo to freeze. I believe is due to the massive number of `std::cout`s in the `TeamControllerPlugin::OnDataReceived` callback. Maybe we should comment this code to prevent hangs when we have a large team and lots of communication.", "title": "Imu and compass sensors", "destination": {"commit": {"hash": "e1f0ed80febd", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/e1f0ed80febd.json"}, "html": {"href": "#!/osrf/swarm/commits/e1f0ed80febd"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "827a39ba215e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/827a39ba215e.json"}, "html": {"href": "#!/osrf/swarm/commits/827a39ba215e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "imu"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-08-18T20:51:50.764856+00:00"}, "pull_request": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13/comments/9187156.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13/_/diff#comment-9187156"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}, "content": {"raw": "Why convert to euler? We can just pass back a quaternion.", "markup": "markdown", "html": "<p>Why convert to euler? We can just pass back a quaternion.</p>", "type": "rendered"}, "created_on": "2015-08-18T19:33:37.400361+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2015-08-18T19:33:37.407974+00:00", "type": "pullrequest_comment", "id": 9187156}, "pull_request": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13/comments/9187136.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13/_/diff#comment-9187136"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}, "content": {"raw": "Add a `\\return`", "markup": "markdown", "html": "<p>Add a <code>\\return</code></p>", "type": "rendered"}, "created_on": "2015-08-18T19:33:03.187899+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {}, "updated_on": "2015-08-18T19:33:03.200367+00:00", "type": "pullrequest_comment", "id": 9187136}, "pull_request": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}}, {"update": {"description": "* Add an IMU sensor to each robot that returns linear velocity, angular velocity and orientation with respect a reference position (initial position). I've used a combination of an IMU sensor and reading the linear velocity directly from the model.\r\n* Add a compass sensor to each robot that returns the bearing with respect the true North. Gazebo angles work in the range of `PI`, `-PI` but a typical compass seems to work in `0`, `2*PI`. I've used the yaw angle of the robot, translated and normalized it.\r\n* Worlds updated with the new `<imu>` sensors for each model.\r\n* `example/TeamControllerPlugin.cc` updated for using the new `Imu()` and `Bearing()` calls.\r\n\r\nYou can try any of the world files and check the console output to make sure that the IMU/bearing values make sense.\r\n\r\n[Here's the tutorial](#!/osrf/swarm/wiki/Tutorial_6-IMU_bearing_sensor) (need pull request #14).\r\n\r\n**Note:** Using my laptop and launching Gazebo with any of the `*_36.world` was causing Gazebo to freeze. I believe is due to the massive number of `std::cout`s in the `TeamControllerPlugin::OnDataReceived` callback. Maybe we should comment this code to prevent hangs when we have a large team and lots of communication.", "title": "Imu and compass sensors", "destination": {"commit": {"hash": "ee3073b27fb1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/ee3073b27fb1.json"}, "html": {"href": "#!/osrf/swarm/commits/ee3073b27fb1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b493c72bc0c3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/b493c72bc0c3.json"}, "html": {"href": "#!/osrf/swarm/commits/b493c72bc0c3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "imu"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-08-16T18:37:04.794275+00:00"}, "pull_request": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}}, {"update": {"description": "* Add an IMU sensor to each robot that returns linear velocity, angular velocity and orientation with respect a reference position (initial position). I've used a combination of an IMU sensor and reading the linear velocity directly from the model.\r\n* Add a compass sensor to each robot that returns the bearing with respect the true North. Gazebo angles work in the range of `PI`, `-PI` but a typical compass seems to work in `0`, `2*PI`. I've used the yaw angle of the robot, translated and normalized it.\r\n* Worlds updated with the new `<imu>` sensors for each model.\r\n* `example/TeamControllerPlugin.cc` updated for using the new `Imu()` and `Bearing()` calls.\r\n\r\nYou can try any of the world files and check the console output to make sure that the IMU/bearing values make sense.\r\n\r\n[Here's the tutorial](#!/osrf/swarm/wiki/Tutorial_6-IMU_bearing_sensor) (need pull request #14).\r\n\r\n**Note:** Using my laptop and launching Gazebo with any of the `*_36.world` was causing Gazebo to freeze. I believe is due to the massive number of `couts` in the `TeamControllerPlugin::OnDataReceived` callback. Maybe we should comment this code to prevent hangs when we have a large team and lots of communication.", "title": "Imu and compass sensors", "destination": {"commit": {"hash": "ee3073b27fb1", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/ee3073b27fb1.json"}, "html": {"href": "#!/osrf/swarm/commits/ee3073b27fb1"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b493c72bc0c3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/b493c72bc0c3.json"}, "html": {"href": "#!/osrf/swarm/commits/b493c72bc0c3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "imu"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-08-16T17:48:10.461289+00:00"}, "pull_request": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}}, {"update": {"description": "* Add an IMU sensor to each robot that returns linear velocity, angular velocity and orientation with respect a reference position (initial position). I've used a combination of an IMU sensor and reading the linear velocity directly from the model.\r\n* Add a compass sensor to each robot that returns the bearing with respect the true North. Gazebo angles work in the range of `PI`, `-PI` but a typical compass seems to work in `0`, `2*PI`. I've used the yaw angle of the robot, translated and normalized it.\r\n* Worlds updated with the new `<imu>` sensors for each model.\r\n* `example/TeamControllerPlugin.cc` updated for using the new `Imu()` and `Bearing()` calls.\r\n\r\nYou can try any of the world files and check the console output to make sure that the IMU/bearing values make sense.\r\n\r\n[Here's the tutorial](#!/osrf/swarm/wiki/Tutorial_6-IMU_bearing_sensor) (need pull request #14).\r\n\r\n**Note:** Using my laptop and launching Gazebo with any of the `*_36.world` was causing Gazebo to freeze. I believe is due to the massive number of `couts` in the `TeamControllerPlugin::OnDataReceived` callback. Maybe we should comment this code to prevent hangs when we have a large team and lots of communication.", "title": "Imu and compass sensors", "destination": {"commit": {"hash": "7880f5dddebb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/7880f5dddebb.json"}, "html": {"href": "#!/osrf/swarm/commits/7880f5dddebb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d35c9b905d8b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/d35c9b905d8b.json"}, "html": {"href": "#!/osrf/swarm/commits/d35c9b905d8b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "imu"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-08-16T17:38:58.001566+00:00"}, "pull_request": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}}, {"update": {"description": "* Add an IMU sensor to each robot that returns linear velocity, angular velocity and orientation with respect a reference position (initial position). I've used a combination of an IMU sensor and reading the linear velocity directly from the model.\r\n* Add a compass sensor to each robot that returns the bearing with respect the true North. Gazebo angles work in the range of `PI`, `-PI` but a typical compass seems to work in `0`, `2*PI`. I've used the yaw angle of the robot, translated and normalized it.\r\n* Worlds updated with the new `<imu>` sensors for each model.\r\n* `example/TeamControllerPlugin.cc` updated for using the new `Imu()` and `Bearing()` calls.\r\n\r\nYou can try any of the world files and check the console output to make sure that the IMU/bearing values make sense.\r\n\r\n**Note:** Using my laptop and launching Gazebo with any of the `*_36.world` was causing Gazebo to freeze. I believe is due to the massive number of `couts` in the `TeamControllerPlugin::OnDataReceived` callback. Maybe we should comment this code to prevent hangs when we have a large team and lots of communication.", "title": "Imu and compass sensors", "destination": {"commit": {"hash": "7880f5dddebb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/7880f5dddebb.json"}, "html": {"href": "#!/osrf/swarm/commits/7880f5dddebb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d35c9b905d8b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/d35c9b905d8b.json"}, "html": {"href": "#!/osrf/swarm/commits/d35c9b905d8b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "imu"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-08-16T05:11:48.508487+00:00"}, "pull_request": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}}, {"update": {"description": "* Add an IMU sensor to each robot that returns linear velocity, angular velocity and orientation with respect a reference position (initial position). I've used a combination of an IMU sensor and reading the linear velocity directly from the model.\r\n* Add a compass sensor to each robot that returns the bearing with respect the true North. Gazebo angles work in the range of `PI`, `-PI` but a typical compass seems to work in `0`, `2*PI`. I've used the yaw angle of the robot, translated and normalized it.\r\n* Worlds updated with the new `<imu>` sensors for each model.\r\n* `example/TeamControllerPlugin.cc` updated for using the new `Imu()` and `Bearing()` calls.\r\n\r\nYou can try any of the world files and check the console output to make sure that the IMU/bearing values make sense.\r\n\r\n**Note:** Using my laptop and launching Gazebo with any of the `*_36.world` was causing Gazebo to freeze. I believe is due to the massive number of `couts` in the `TeamControllerPlugin::OnDataReceived` callback. Maybe we should comment this code to prevent hangs when we have a large team and lots of communication.", "title": "Imu and compass sensors", "destination": {"commit": {"hash": "7880f5dddebb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/7880f5dddebb.json"}, "html": {"href": "#!/osrf/swarm/commits/7880f5dddebb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "da90bc5bb64e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/da90bc5bb64e.json"}, "html": {"href": "#!/osrf/swarm/commits/da90bc5bb64e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "imu"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-08-16T05:08:39.678038+00:00"}, "pull_request": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}}, {"update": {"description": "* Add an IMU sensor to each robot that returns linear velocity, angular velocity and orientation with respect a reference position (initial position). I've used a combination of an IMU sensor and reading the linear velocity directly from the model.\r\n* Add a compass sensor to each robot that returns the bearing with respect the true North. Gazebo angles work in the range of `PI`, `-PI` but a typical compass seems to work in `0`, `2*PI`. I've used the yaw angle of the robot, translated and normalized it.\r\n* Worlds updated with the new `<imu>` sensors for each model.\r\n* `example/TeamControllerPlugin.cc` updated for using the new `Imu()` and `Bearing()` calls.\r\n\r\nYou can try any of the world files and check the console output to make sure that the IMU/bearing values make sense.\r\n\r\n**Note:** Using my laptop and launching Gazebo with any of the `*_36.world` was causing Gazebo to freeze. I believe is due to the massive number of `couts` in the `TeamControllerPlugin::OnDataReceived` callback. Maybe we should comment this code to prevent hangs when we have a large team and lots of communication.", "title": "Imu and compass sensors", "destination": {"commit": {"hash": "7880f5dddebb", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/7880f5dddebb.json"}, "html": {"href": "#!/osrf/swarm/commits/7880f5dddebb"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "da90bc5bb64e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/da90bc5bb64e.json"}, "html": {"href": "#!/osrf/swarm/commits/da90bc5bb64e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "imu"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2015-08-16T05:08:39.651741+00:00"}, "pull_request": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/swarm/pullrequests/13.json"}, "html": {"href": "#!/osrf/swarm/pull-requests/13"}}, "title": "Imu and compass sensors"}}]}