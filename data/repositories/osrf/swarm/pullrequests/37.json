{"rendered": {"description": {"raw": "Partial support for logging:\r\n\r\n* When logging is enabled, a log file is automatically created under` ~/.swarm/log/<timestamp>/swarm.log`\r\n* To enable the log file you should set the environment variable `SWARM_LOG` to `1`.\r\n* The log contains all the sensor measurements and the actions sent to the robot (no comms yet).\r\n* A `LogParser.hh` is provided to parse a log file.\r\n* As an example of using `LogParser.hh`, I've created a basic `swarmlog` tool that introspects a log file. It has the same format as `gz log`.\r\n\r\nExample of usage: \r\n\r\n* Compile and install as usual.\r\n* Start `gzserver`:\r\n\r\n```\r\n#!python\r\n\r\nSWARM_LOG=1 gzserver worlds/ground_simple_2.world\r\n```\r\n\r\n* Stop `gzserver` and inspect the log file:\r\n\r\n```\r\n#!python\r\n\r\nswarmlog -s -f <YOUR_LOG_FILE>\r\n```\r\n\r\nI didn't focus on optimizing the logging for now. When we have everything working we can improve the logging performance if this is the bottleneck.\r\n\r\n~~*Note: this PR is built atop pull request #35, which should be merged first.*~~\r\n\r\n\r\n   \r\n", "markup": "markdown", "html": "<p>Partial support for logging:</p>\n<ul>\n<li>When logging is enabled, a log file is automatically created under<code>~/.swarm/log/&lt;timestamp&gt;/swarm.log</code></li>\n<li>To enable the log file you should set the environment variable <code>SWARM_LOG</code> to <code>1</code>.</li>\n<li>The log contains all the sensor measurements and the actions sent to the robot (no comms yet).</li>\n<li>A <code>LogParser.hh</code> is provided to parse a log file.</li>\n<li>As an example of using <code>LogParser.hh</code>, I've created a basic <code>swarmlog</code> tool that introspects a log file. It has the same format as <code>gz log</code>.</li>\n</ul>\n<p>Example of usage: </p>\n<ul>\n<li>Compile and install as usual.</li>\n<li>Start <code>gzserver</code>:</li>\n</ul>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">SWARM_LOG</span><span class=\"o\">=</span><span class=\"mi\">1</span> <span class=\"n\">gzserver</span> <span class=\"n\">worlds</span><span class=\"o\">/</span><span class=\"n\">ground_simple_2</span><span class=\"o\">.</span><span class=\"n\">world</span>\n</pre></div>\n\n\n<ul>\n<li>Stop <code>gzserver</code> and inspect the log file:</li>\n</ul>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">swarmlog</span> <span class=\"o\">-</span><span class=\"n\">s</span> <span class=\"o\">-</span><span class=\"n\">f</span> <span class=\"o\">&lt;</span><span class=\"n\">YOUR_LOG_FILE</span><span class=\"o\">&gt;</span>\n</pre></div>\n\n\n<p>I didn't focus on optimizing the logging for now. When we have everything working we can improve the logging performance if this is the bottleneck.</p>\n<p><del><em>Note: this PR is built atop <a href=\"#!/osrf/swarm/pull-requests/35/update-sensors-and-apply-velocities-once\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #35</a>, which should be merged first.</em></del></p>", "type": "rendered"}, "title": {"raw": "Logging - part 1", "markup": "markdown", "html": "<p>Logging - part 1</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Partial support for logging:\r\n\r\n* When logging is enabled, a log file is automatically created under` ~/.swarm/log/<timestamp>/swarm.log`\r\n* To enable the log file you should set the environment variable `SWARM_LOG` to `1`.\r\n* The log contains all the sensor measurements and the actions sent to the robot (no comms yet).\r\n* A `LogParser.hh` is provided to parse a log file.\r\n* As an example of using `LogParser.hh`, I've created a basic `swarmlog` tool that introspects a log file. It has the same format as `gz log`.\r\n\r\nExample of usage: \r\n\r\n* Compile and install as usual.\r\n* Start `gzserver`:\r\n\r\n```\r\n#!python\r\n\r\nSWARM_LOG=1 gzserver worlds/ground_simple_2.world\r\n```\r\n\r\n* Stop `gzserver` and inspect the log file:\r\n\r\n```\r\n#!python\r\n\r\nswarmlog -s -f <YOUR_LOG_FILE>\r\n```\r\n\r\nI didn't focus on optimizing the logging for now. When we have everything working we can improve the logging performance if this is the bottleneck.\r\n\r\n~~*Note: this PR is built atop pull request #35, which should be merged first.*~~\r\n\r\n\r\n   \r\n", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/pullrequests/37/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/diffstat/osrf/swarm:d5073e53205f%0D5ec20df14916?from_pullrequest_id=37"}, "commits": {"href": "data/repositories/osrf/swarm/pullrequests/37/commits.json"}, "self": {"href": "data/repositories/osrf/swarm/pullrequests/37.json"}, "comments": {"href": "data/repositories/osrf/swarm/pullrequests/37/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/pullrequests/37/merge"}, "html": {"href": "#!/osrf/swarm/pull-requests/37"}, "activity": {"href": "data/repositories/osrf/swarm/pullrequests/37/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/diff/osrf/swarm:d5073e53205f%0D5ec20df14916?from_pullrequest_id=37"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/pullrequests/37/approve"}, "statuses": {"href": "data/repositories/osrf/swarm/pullrequests/37/statuses_page=1.json"}}, "title": "Logging - part 1", "close_source_branch": true, "reviewers": [{"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}], "id": 37, "destination": {"commit": {"hash": "5ec20df14916", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/5ec20df14916.json"}, "html": {"href": "#!/osrf/swarm/commits/5ec20df14916"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "default"}}, "created_on": "2015-09-26T23:23:29.385486+00:00", "summary": {"raw": "Partial support for logging:\r\n\r\n* When logging is enabled, a log file is automatically created under` ~/.swarm/log/<timestamp>/swarm.log`\r\n* To enable the log file you should set the environment variable `SWARM_LOG` to `1`.\r\n* The log contains all the sensor measurements and the actions sent to the robot (no comms yet).\r\n* A `LogParser.hh` is provided to parse a log file.\r\n* As an example of using `LogParser.hh`, I've created a basic `swarmlog` tool that introspects a log file. It has the same format as `gz log`.\r\n\r\nExample of usage: \r\n\r\n* Compile and install as usual.\r\n* Start `gzserver`:\r\n\r\n```\r\n#!python\r\n\r\nSWARM_LOG=1 gzserver worlds/ground_simple_2.world\r\n```\r\n\r\n* Stop `gzserver` and inspect the log file:\r\n\r\n```\r\n#!python\r\n\r\nswarmlog -s -f <YOUR_LOG_FILE>\r\n```\r\n\r\nI didn't focus on optimizing the logging for now. When we have everything working we can improve the logging performance if this is the bottleneck.\r\n\r\n~~*Note: this PR is built atop pull request #35, which should be merged first.*~~\r\n\r\n\r\n   \r\n", "markup": "markdown", "html": "<p>Partial support for logging:</p>\n<ul>\n<li>When logging is enabled, a log file is automatically created under<code>~/.swarm/log/&lt;timestamp&gt;/swarm.log</code></li>\n<li>To enable the log file you should set the environment variable <code>SWARM_LOG</code> to <code>1</code>.</li>\n<li>The log contains all the sensor measurements and the actions sent to the robot (no comms yet).</li>\n<li>A <code>LogParser.hh</code> is provided to parse a log file.</li>\n<li>As an example of using <code>LogParser.hh</code>, I've created a basic <code>swarmlog</code> tool that introspects a log file. It has the same format as <code>gz log</code>.</li>\n</ul>\n<p>Example of usage: </p>\n<ul>\n<li>Compile and install as usual.</li>\n<li>Start <code>gzserver</code>:</li>\n</ul>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">SWARM_LOG</span><span class=\"o\">=</span><span class=\"mi\">1</span> <span class=\"n\">gzserver</span> <span class=\"n\">worlds</span><span class=\"o\">/</span><span class=\"n\">ground_simple_2</span><span class=\"o\">.</span><span class=\"n\">world</span>\n</pre></div>\n\n\n<ul>\n<li>Stop <code>gzserver</code> and inspect the log file:</li>\n</ul>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">swarmlog</span> <span class=\"o\">-</span><span class=\"n\">s</span> <span class=\"o\">-</span><span class=\"n\">f</span> <span class=\"o\">&lt;</span><span class=\"n\">YOUR_LOG_FILE</span><span class=\"o\">&gt;</span>\n</pre></div>\n\n\n<p>I didn't focus on optimizing the logging for now. When we have everything working we can improve the logging performance if this is the bottleneck.</p>\n<p><del><em>Note: this PR is built atop <a href=\"#!/osrf/swarm/pull-requests/35/update-sensors-and-apply-velocities-once\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #35</a>, which should be merged first.</em></del></p>", "type": "rendered"}, "source": {"commit": {"hash": "507e168ae48c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/507e168ae48c.json"}, "html": {"href": "#!/osrf/swarm/commits/507e168ae48c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "logging_part1"}}, "comment_count": 13, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2015-10-01T22:37:11.774730+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "REVIEWER", "participated_on": "2015-10-02T22:03:32.628681+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2015-10-05T16:42:24.183177+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "d5073e53205f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/d5073e53205f.json"}, "html": {"href": "#!/osrf/swarm/commits/d5073e53205f"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}