{"rendered": {"description": {"raw": "`master.erb` contains one function per world file to be generated. There are instructions inside the file for adding new worlds.\r\n\r\nAs an example, I removed `complete.world.erb` and generated `complete.world` using this new strategy.\r\n\r\nHow to test this pull request:\r\n\r\n* Clean your build directory.\r\n* Compile and install (don't forget to compile and install the example directory)\r\n* Execute:\r\n\r\n```\r\n#!python\r\n\r\ngazebo worlds/complete.world\r\n```\r\n", "markup": "markdown", "html": "<p><code>master.erb</code> contains one function per world file to be generated. There are instructions inside the file for adding new worlds.</p>\n<p>As an example, I removed <code>complete.world.erb</code> and generated <code>complete.world</code> using this new strategy.</p>\n<p>How to test this pull request:</p>\n<ul>\n<li>Clean your build directory.</li>\n<li>Compile and install (don't forget to compile and install the example directory)</li>\n<li>Execute:</li>\n</ul>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">gazebo</span> <span class=\"n\">worlds</span><span class=\"o\">/</span><span class=\"n\">complete</span><span class=\"o\">.</span><span class=\"n\">world</span>\n</pre></div>", "type": "rendered"}, "title": {"raw": "Automatic world generation based on parameters", "markup": "markdown", "html": "<p>Automatic world generation based on parameters</p>", "type": "rendered"}}, "type": "pullrequest", "description": "`master.erb` contains one function per world file to be generated. There are instructions inside the file for adding new worlds.\r\n\r\nAs an example, I removed `complete.world.erb` and generated `complete.world` using this new strategy.\r\n\r\nHow to test this pull request:\r\n\r\n* Clean your build directory.\r\n* Compile and install (don't forget to compile and install the example directory)\r\n* Execute:\r\n\r\n```\r\n#!python\r\n\r\ngazebo worlds/complete.world\r\n```\r\n", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/pullrequests/56/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/diffstat/osrf/swarm:8bf55b7fdccf%0D1935d2c9bb58?from_pullrequest_id=56"}, "commits": {"href": "data/repositories/osrf/swarm/pullrequests/56/commits.json"}, "self": {"href": "data/repositories/osrf/swarm/pullrequests/56.json"}, "comments": {"href": "data/repositories/osrf/swarm/pullrequests/56/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/pullrequests/56/merge"}, "html": {"href": "#!/osrf/swarm/pull-requests/56"}, "activity": {"href": "data/repositories/osrf/swarm/pullrequests/56/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/diff/osrf/swarm:8bf55b7fdccf%0D1935d2c9bb58?from_pullrequest_id=56"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/swarm/pullrequests/56/approve"}, "statuses": {"href": "data/repositories/osrf/swarm/pullrequests/56/statuses_page=1.json"}}, "title": "Automatic world generation based on parameters", "close_source_branch": true, "reviewers": [], "id": 56, "destination": {"commit": {"hash": "1935d2c9bb58", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/1935d2c9bb58.json"}, "html": {"href": "#!/osrf/swarm/commits/1935d2c9bb58"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "default"}}, "created_on": "2015-10-20T01:50:57.910123+00:00", "summary": {"raw": "`master.erb` contains one function per world file to be generated. There are instructions inside the file for adding new worlds.\r\n\r\nAs an example, I removed `complete.world.erb` and generated `complete.world` using this new strategy.\r\n\r\nHow to test this pull request:\r\n\r\n* Clean your build directory.\r\n* Compile and install (don't forget to compile and install the example directory)\r\n* Execute:\r\n\r\n```\r\n#!python\r\n\r\ngazebo worlds/complete.world\r\n```\r\n", "markup": "markdown", "html": "<p><code>master.erb</code> contains one function per world file to be generated. There are instructions inside the file for adding new worlds.</p>\n<p>As an example, I removed <code>complete.world.erb</code> and generated <code>complete.world</code> using this new strategy.</p>\n<p>How to test this pull request:</p>\n<ul>\n<li>Clean your build directory.</li>\n<li>Compile and install (don't forget to compile and install the example directory)</li>\n<li>Execute:</li>\n</ul>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">gazebo</span> <span class=\"n\">worlds</span><span class=\"o\">/</span><span class=\"n\">complete</span><span class=\"o\">.</span><span class=\"n\">world</span>\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "df353ae37556", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/df353ae37556.json"}, "html": {"href": "#!/osrf/swarm/commits/df353ae37556"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "branch": {"name": "world_gen"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2015-10-22T19:06:17.537379+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2015-10-22T22:34:15.389137+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "8bf55b7fdccf", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/swarm/commit/8bf55b7fdccf.json"}, "html": {"href": "#!/osrf/swarm/commits/8bf55b7fdccf"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}