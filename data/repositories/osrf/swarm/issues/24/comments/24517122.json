{"links": {"self": {"href": "data/repositories/osrf/swarm/issues/24/comments/24517122.json"}, "html": {"href": "#!/osrf/swarm/issues/24#comment-24517122"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/swarm/issues/24.json"}}, "type": "issue", "id": 24, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "title": "elevation lookup offset"}, "content": {"raw": "I seem to get good registration between the terrain lookup function and the ground. I'm using this code\n\n```\n#!c++\n\n     this->MapQuery(lat, lon, elevation, terrainType);\n\n      ignition::math::Vector3d local = this->world->GetSphericalCoordinates()->LocalFromSpherical(ignition::math::Vector3d(lat, lon, 0));\n      local = this->world->GetSphericalCoordinates()->GlobalFromLocal(local);\n      local.Z(elevation - this->world->GetSphericalCoordinates()->GetElevationReference());\n```\n\nto calculate a single visualization point.\n\nA point in Gazebo's visualization frame is different from a point returned by MapQuery. \n\nI think you're trying to visualize GPS coordinates with respect to ground because your planes are flying into the ground. If this is the case, can you highlight a chunk of code that you think is causing the problem, or point me in the direction of trying out your problem use case?", "markup": "markdown", "html": "<p>I seem to get good registration between the terrain lookup function and the ground. I'm using this code</p>\n<div class=\"codehilite language-c++\"><pre><span></span>     <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">MapQuery</span><span class=\"p\">(</span><span class=\"n\">lat</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"p\">,</span> <span class=\"n\">elevation</span><span class=\"p\">,</span> <span class=\"n\">terrainType</span><span class=\"p\">);</span>\n\n      <span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3d</span> <span class=\"n\">local</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">world</span><span class=\"o\">-&gt;</span><span class=\"n\">GetSphericalCoordinates</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">LocalFromSpherical</span><span class=\"p\">(</span><span class=\"n\">ignition</span><span class=\"o\">::</span><span class=\"n\">math</span><span class=\"o\">::</span><span class=\"n\">Vector3d</span><span class=\"p\">(</span><span class=\"n\">lat</span><span class=\"p\">,</span> <span class=\"n\">lon</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">));</span>\n      <span class=\"n\">local</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">world</span><span class=\"o\">-&gt;</span><span class=\"n\">GetSphericalCoordinates</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">GlobalFromLocal</span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">);</span>\n      <span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">Z</span><span class=\"p\">(</span><span class=\"n\">elevation</span> <span class=\"o\">-</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">world</span><span class=\"o\">-&gt;</span><span class=\"n\">GetSphericalCoordinates</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">GetElevationReference</span><span class=\"p\">());</span>\n</pre></div>\n\n\n<p>to calculate a single visualization point.</p>\n<p>A point in Gazebo's visualization frame is different from a point returned by MapQuery. </p>\n<p>I think you're trying to visualize GPS coordinates with respect to ground because your planes are flying into the ground. If this is the case, can you highlight a chunk of code that you think is causing the problem, or point me in the direction of trying out your problem use case?</p>", "type": "rendered"}, "created_on": "2016-01-06T15:52:16.419780+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": null, "type": "issue_comment", "id": 24517122}