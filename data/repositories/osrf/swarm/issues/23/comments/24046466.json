{"links": {"self": {"href": "data/repositories/osrf/swarm/issues/23/comments/24046466.json"}, "html": {"href": "#!/osrf/swarm/issues/23#comment-24046466"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/swarm/issues/23.json"}}, "type": "issue", "id": 23, "repository": {"links": {"self": {"href": "data/repositories/osrf/swarm.json"}, "html": {"href": "#!/osrf/swarm"}, "avatar": {"href": "data/bytebucket.org/ravatar/{06a294a4-4254-4f63-b7b3-e5768577fb96}ts=default"}}, "type": "repository", "name": "swarm", "full_name": "osrf/swarm", "uuid": "{06a294a4-4254-4f63-b7b3-e5768577fb96}"}, "title": "Testing your installation"}, "content": {"raw": "The last version of the controller example doesn't print the neighbors on the console. You can go ahead and uncomment lines 162-169 in `example/TeamControllerPlugin.cc` to show this information in each update cycle.\n\n```\n#!python\n\n// Uncomment the following block to display the list of neighbors.\n// if (myNeighbors.empty())\n//   std::cout << \"[\" << this->Host() << \"] Neighbors: EMPTY\" << std::endl;\n// else\n// {\n//   std::cout << \"[\" << this->Host() << \"] Neighbors:\" << std::endl;\n//   for (auto const &neighbor : myNeighbors)\n//     std::cout << \"\\t\" << neighbor << std::endl;\n// }\n```", "markup": "markdown", "html": "<p>The last version of the controller example doesn't print the neighbors on the console. You can go ahead and uncomment lines 162-169 in <code>example/TeamControllerPlugin.cc</code> to show this information in each update cycle.</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"o\">//</span> <span class=\"n\">Uncomment</span> <span class=\"n\">the</span> <span class=\"n\">following</span> <span class=\"n\">block</span> <span class=\"n\">to</span> <span class=\"n\">display</span> <span class=\"n\">the</span> <span class=\"nb\">list</span> <span class=\"n\">of</span> <span class=\"n\">neighbors</span><span class=\"o\">.</span>\n<span class=\"o\">//</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">myNeighbors</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"p\">())</span>\n<span class=\"o\">//</span>   <span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;[&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">Host</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;] Neighbors: EMPTY&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"o\">//</span> <span class=\"k\">else</span>\n<span class=\"o\">//</span> <span class=\"p\">{</span>\n<span class=\"o\">//</span>   <span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;[&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">Host</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;] Neighbors:&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"o\">//</span>   <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">auto</span> <span class=\"n\">const</span> <span class=\"o\">&amp;</span><span class=\"n\">neighbor</span> <span class=\"p\">:</span> <span class=\"n\">myNeighbors</span><span class=\"p\">)</span>\n<span class=\"o\">//</span>     <span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\t</span><span class=\"s2\">&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">neighbor</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"o\">//</span> <span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2015-12-14T19:35:43.396926+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2015-12-14T20:49:41.458000+00:00", "type": "issue_comment", "id": 24046466}