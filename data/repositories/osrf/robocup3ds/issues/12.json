{"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/robocup3ds.json"}, "html": {"href": "#!/osrf/robocup3ds"}, "avatar": {"href": "data/bytebucket.org/ravatar/{920a9983-6b31-4842-b414-a2a01bf8a4e6}ts=c_plus_plus"}}, "type": "repository", "name": "robocup3ds", "full_name": "osrf/robocup3ds", "uuid": "{920a9983-6b31-4842-b414-a2a01bf8a4e6}"}, "links": {"attachments": {"href": "data/repositories/osrf/robocup3ds/issues/12/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/robocup3ds/issues/12.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/robocup3ds/issues/12/watch"}, "comments": {"href": "data/repositories/osrf/robocup3ds/issues/12/comments_page=1.json"}, "html": {"href": "#!/osrf/robocup3ds/issues/12/deadlock-in-rcpserver-send"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/robocup3ds/issues/12/vote"}}, "reporter": {"display_name": "jasonzliang NA", "uuid": "{663c75f1-dde2-425c-aa25-68ad2f4eb5ec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B663c75f1-dde2-425c-aa25-68ad2f4eb5ec%7D"}, "html": {"href": "https://bitbucket.org/%7B663c75f1-dde2-425c-aa25-68ad2f4eb5ec%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:4f6d7230-9817-448e-8b0d-98cb3dd0821c/5b9c099e-6241-49a1-ba1d-fabcca24c6c3/128"}}, "nickname": "jasonzliang", "type": "user", "account_id": "557058:4f6d7230-9817-448e-8b0d-98cb3dd0821c"}, "title": "Deadlock in RCPServer::Send()", "component": null, "votes": 0, "watches": 3, "content": {"raw": "A deadlock condition sometimes occurs with the lock guard in the Send() method in RCPServer:\r\n\r\n```\r\n#!c++\r\n\r\nbool RCPServer::Send(const int _socket, const char *_data, const size_t _len)\r\n{\r\n  if (!this->enabled)\r\n  {\r\n    std::cerr << \"RCPServer::Send() error: Service not enabled yet\"\r\n              << std::endl;\r\n    return false;\r\n  }\r\n\r\n  std::lock_guard<std::mutex> lock(this->mutex);\r\n\r\n  bool found = false;\r\n  for (size_t i = 1; i < this->pollSockets.size(); ++i)\r\n  {\r\n    if (this->pollSockets.at(i).fd == _socket)\r\n    {\r\n      found = true;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (!found)\r\n  {\r\n    std::cerr << \"Socket not found\" << std::endl;\r\n    return false;\r\n  }\r\n\r\n  // Send data using the soket.\r\n  auto bytes_written = write(_socket, _data, _len);\r\n  if (bytes_written < 0)\r\n  {\r\n    std::cerr << \"ERROR writing to socket\" << std::endl;\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n```\r\n\r\nTo reproduce:\r\n\r\n1. Start gazebo with robocup3ds plugin and connect with the magma agent (download here: http://chaosscripting.net/files/magma-protocol-tester.zip\r\n)  \r\n2. enter the following strings (clicking send after each one)  \r\n(scene NaoSimsparkBT)  \r\n(init (unum 5)(teamname magmaOffenburg))  \r\n\r\n3. Confirm that agent is loaded on field. After this send as many \"(syn)\" messages until the timer stops advancing. \r\n", "markup": "markdown", "html": "<p>A deadlock condition sometimes occurs with the lock guard in the Send() method in RCPServer:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">bool</span> <span class=\"n\">RCPServer</span><span class=\"o\">::</span><span class=\"n\">Send</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"kt\">int</span> <span class=\"n\">_socket</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">_data</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">size_t</span> <span class=\"n\">_len</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">enabled</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;RCPServer::Send() error: Service not enabled yet&quot;</span>\n              <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">lock_guard</span><span class=\"o\">&lt;</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">mutex</span><span class=\"o\">&gt;</span> <span class=\"n\">lock</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">mutex</span><span class=\"p\">);</span>\n\n  <span class=\"kt\">bool</span> <span class=\"n\">found</span> <span class=\"o\">=</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">size_t</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pollSockets</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span> <span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">pollSockets</span><span class=\"p\">.</span><span class=\"n\">at</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">).</span><span class=\"n\">fd</span> <span class=\"o\">==</span> <span class=\"n\">_socket</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">found</span> <span class=\"o\">=</span> <span class=\"nb\">true</span><span class=\"p\">;</span>\n      <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">found</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Socket not found&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"c1\">// Send data using the soket.</span>\n  <span class=\"k\">auto</span> <span class=\"n\">bytes_written</span> <span class=\"o\">=</span> <span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">_socket</span><span class=\"p\">,</span> <span class=\"n\">_data</span><span class=\"p\">,</span> <span class=\"n\">_len</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">bytes_written</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;ERROR writing to socket&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"k\">return</span> <span class=\"nb\">true</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>To reproduce:</p>\n<ol>\n<li>Start gazebo with robocup3ds plugin and connect with the magma agent (download here: <a href=\"http://chaosscripting.net/files/magma-protocol-tester.zip\" rel=\"nofollow\" class=\"ap-connect-link\">http://chaosscripting.net/files/magma-protocol-tester.zip</a>\n)  </li>\n<li>\n<p>enter the following strings (clicking send after each one)<br />\n(scene NaoSimsparkBT)<br />\n(init (unum 5)(teamname magmaOffenburg))  </p>\n</li>\n<li>\n<p>Confirm that agent is loaded on field. After this send as many \"(syn)\" messages until the timer stops advancing. </p>\n</li>\n</ol>", "type": "rendered"}, "assignee": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-11-05T11:44:55.655192+00:00", "milestone": null, "updated_on": "2016-01-12T22:44:43.319450+00:00", "type": "issue", "id": 12}