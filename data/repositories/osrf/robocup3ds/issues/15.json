{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/robocup3ds.json"}, "html": {"href": "#!/osrf/robocup3ds"}, "avatar": {"href": "data/bytebucket.org/ravatar/{920a9983-6b31-4842-b414-a2a01bf8a4e6}ts=c_plus_plus"}}, "type": "repository", "name": "robocup3ds", "full_name": "osrf/robocup3ds", "uuid": "{920a9983-6b31-4842-b414-a2a01bf8a4e6}"}, "links": {"attachments": {"href": "data/repositories/osrf/robocup3ds/issues/15/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/robocup3ds/issues/15.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/robocup3ds/issues/15/watch"}, "comments": {"href": "data/repositories/osrf/robocup3ds/issues/15/comments_page=1.json"}, "html": {"href": "#!/osrf/robocup3ds/issues/15/updateperceptor-sends-message-after-client"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/robocup3ds/issues/15/vote"}}, "reporter": {"display_name": "jasonzliang NA", "uuid": "{663c75f1-dde2-425c-aa25-68ad2f4eb5ec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B663c75f1-dde2-425c-aa25-68ad2f4eb5ec%7D"}, "html": {"href": "https://bitbucket.org/%7B663c75f1-dde2-425c-aa25-68ad2f4eb5ec%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:4f6d7230-9817-448e-8b0d-98cb3dd0821c/5b9c099e-6241-49a1-ba1d-fabcca24c6c3/128"}}, "nickname": "jasonzliang", "type": "user", "account_id": "557058:4f6d7230-9817-448e-8b0d-98cb3dd0821c"}, "title": "UpdatePerceptor() sends message after client is disconnected in RCPServer", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Connecting an agent during for example `PlayOn` outputs something like this:\r\n\r\n```\r\n[Msg] GameState::AddAgent() error: Invalid playmode, PlayOn\r\n[Msg] (34.422) failed to add agent to game state: 2_magmaOffenburg\r\n```\r\n\r\nIf the agent is then stopped, the terminal is spammed with the following message, seemingly each frame:\r\n\r\n```\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\nRCPServer::Send() Socket not found.\r\n[...]\r\n```\r\n\r\nThis is annoying because it makes it difficult to notice any other output until gazebo-robocup3ds is restarted.\r\n\r\n**The suspected cause:** Agents are removed from gamestate in one thread while cleaning up the sockets corresponding to that agent is done in a separate thread. Since both threads are running in parallel, it is possible for the following order of events to occur:\r\n\r\n1. RCPServer calls OnDisconnection() **(thread 1)**  \r\n2. RCPServer cleans up socket **(thread 1)**  \r\n3. UpdatePerceptor is called (calls RCPServer::Send()) **(thread 2)**  \r\n4. UpdateEffector is called (deletes agent from gamestate) **(thread 2)**  \r\n\r\nWhen this happens, we will receive a warning mesage in the console: \"RCPServer::Send() Socket not found\". This is due to the fact that for a short period of time, the socket is cleaned up, but the corresponding agent object (with socket id) still exists. This issue does not seem to affect functionality of the server. \r\n\r\nA simple solution would be to add a time delay of 0.1 seconds between calling OnDisconnection() in RCPServer and closing the socket, which gives UpdateEffector() (in main thread) enough time to remove the Agent from gamestate.  \r\n\r\nIt seems that unlike SimSpark, the plugin only allows agents to connect while the game is not running.\r\n", "markup": "markdown", "html": "<p>Connecting an agent during for example <code>PlayOn</code> outputs something like this:</p>\n<div class=\"codehilite\"><pre><span></span>[Msg] GameState::AddAgent() error: Invalid playmode, PlayOn\n[Msg] (34.422) failed to add agent to game state: 2_magmaOffenburg\n</pre></div>\n\n\n<p>If the agent is then stopped, the terminal is spammed with the following message, seemingly each frame:</p>\n<div class=\"codehilite\"><pre><span></span>RCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\nRCPServer::Send() Socket not found.\n[...]\n</pre></div>\n\n\n<p>This is annoying because it makes it difficult to notice any other output until gazebo-robocup3ds is restarted.</p>\n<p><strong>The suspected cause:</strong> Agents are removed from gamestate in one thread while cleaning up the sockets corresponding to that agent is done in a separate thread. Since both threads are running in parallel, it is possible for the following order of events to occur:</p>\n<ol>\n<li>RCPServer calls OnDisconnection() <strong>(thread 1)</strong>  </li>\n<li>RCPServer cleans up socket <strong>(thread 1)</strong>  </li>\n<li>UpdatePerceptor is called (calls RCPServer::Send()) <strong>(thread 2)</strong>  </li>\n<li>UpdateEffector is called (deletes agent from gamestate) <strong>(thread 2)</strong>  </li>\n</ol>\n<p>When this happens, we will receive a warning mesage in the console: \"RCPServer::Send() Socket not found\". This is due to the fact that for a short period of time, the socket is cleaned up, but the corresponding agent object (with socket id) still exists. This issue does not seem to affect functionality of the server. </p>\n<p>A simple solution would be to add a time delay of 0.1 seconds between calling OnDisconnection() in RCPServer and closing the socket, which gives UpdateEffector() (in main thread) enough time to remove the Agent from gamestate.  </p>\n<p>It seems that unlike SimSpark, the plugin only allows agents to connect while the game is not running.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-02-22T01:42:41.031992+00:00", "milestone": null, "updated_on": "2016-04-17T09:14:30.606430+00:00", "type": "issue", "id": 15}