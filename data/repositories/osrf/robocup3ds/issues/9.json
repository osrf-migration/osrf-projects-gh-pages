{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/robocup3ds.json"}, "html": {"href": "#!/osrf/robocup3ds"}, "avatar": {"href": "data/bytebucket.org/ravatar/{920a9983-6b31-4842-b414-a2a01bf8a4e6}ts=c_plus_plus"}}, "type": "repository", "name": "robocup3ds", "full_name": "osrf/robocup3ds", "uuid": "{920a9983-6b31-4842-b414-a2a01bf8a4e6}"}, "links": {"attachments": {"href": "data/repositories/osrf/robocup3ds/issues/9/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/robocup3ds/issues/9.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/robocup3ds/issues/9/watch"}, "comments": {"href": "data/repositories/osrf/robocup3ds/issues/9/comments_page=1.json"}, "html": {"href": "#!/osrf/robocup3ds/issues/9/support-for-different-robot-models"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/robocup3ds/issues/9/vote"}}, "reporter": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "title": "Support for different robot models", "component": null, "votes": 0, "watches": 4, "content": {"raw": "It would be nice to support both a model based on the real NAO robot and a simplified NAO robot like the one on Simspark.\r\n\r\n# Real NAO\r\n\r\nWe currently have a NAO H25 v4 based on [these](http://doc.aldebaran.com/2-1/family/nao_h25/links_h25.html) specs. I think it would be nice to keep it as close to the specs as possible, even if something differs from Simspark's robot. This means not altering joint directions or anything else. \r\n\r\nExisting agent code will not work with this out-of-the-box, but it will exist as an alternative for the adventurous.\r\n\r\n# Simspark NAO\r\n\r\nIf we want existing agent code to work out-of-the-box, we will need to model create an SDF based on the [specs](http://simspark.sourceforge.net/wiki/index.php/Models#Physical_Properties) given by Simspark.\r\n\r\n# Directory structure\r\n\r\nMaybe organize the models somewhat like this:\r\n\r\n## Real nao\r\n\r\n~~~\r\n    /models/nao/model.config\r\n    /models/nao/model.sdf\r\n    /models/nao/materials/textures - pngs go here\r\n    /models/nao/materials/meshes - daes and stls go here\r\n~~~\r\n\r\n## Simspark NAO\r\n\r\nWe can avoid copying meshes and textures by referencing the nao meshes in the SDF.\r\n\r\n~~~\r\n    /models/nao_box_model/model.config\r\n    /models/nao_box_model/model.sdf\r\n~~~\r\n\r\n# Choosing model\r\n\r\nIt would be nice if we could choose the type of robot from the world SDF file like this:\r\n\r\n~~~\r\n    <plugin name=\"game_controller\" filename=\"librobocup3dsPlugin.so\">\r\n      <ball>soccer_ball</ball>\r\n      <robot_type>nao_box_model</robot_type>\r\n    </plugin>\r\n~~~\r\n\r\nInternally, we need a way to keep parameters for both robots separate. Perhaps we can have an abstract base class called `robocup3ds::Robot` and two derived classes: `robocup3ds::Nao` and `robocup3ds::NaoBoxModel`.", "markup": "markdown", "html": "<p>It would be nice to support both a model based on the real NAO robot and a simplified NAO robot like the one on Simspark.</p>\n<h1 id=\"markdown-header-real-nao\">Real NAO</h1>\n<p>We currently have a NAO H25 v4 based on <a data-is-external-link=\"true\" href=\"http://doc.aldebaran.com/2-1/family/nao_h25/links_h25.html\" rel=\"nofollow\">these</a> specs. I think it would be nice to keep it as close to the specs as possible, even if something differs from Simspark's robot. This means not altering joint directions or anything else. </p>\n<p>Existing agent code will not work with this out-of-the-box, but it will exist as an alternative for the adventurous.</p>\n<h1 id=\"markdown-header-simspark-nao\">Simspark NAO</h1>\n<p>If we want existing agent code to work out-of-the-box, we will need to model create an SDF based on the <a data-is-external-link=\"true\" href=\"http://simspark.sourceforge.net/wiki/index.php/Models#Physical_Properties\" rel=\"nofollow\">specs</a> given by Simspark.</p>\n<h1 id=\"markdown-header-directory-structure\">Directory structure</h1>\n<p>Maybe organize the models somewhat like this:</p>\n<h2 id=\"markdown-header-real-nao_1\">Real nao</h2>\n<div class=\"codehilite\"><pre><span></span>    /models/nao/model.config\n    /models/nao/model.sdf\n    /models/nao/materials/textures - pngs go here\n    /models/nao/materials/meshes - daes and stls go here\n</pre></div>\n\n\n<h2 id=\"markdown-header-simspark-nao_1\">Simspark NAO</h2>\n<p>We can avoid copying meshes and textures by referencing the nao meshes in the SDF.</p>\n<div class=\"codehilite\"><pre><span></span>    /models/nao_box_model/model.config\n    /models/nao_box_model/model.sdf\n</pre></div>\n\n\n<h1 id=\"markdown-header-choosing-model\">Choosing model</h1>\n<p>It would be nice if we could choose the type of robot from the world SDF file like this:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;game_controller&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;librobocup3dsPlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;ball&gt;</span>soccer_ball<span class=\"nt\">&lt;/ball&gt;</span>\n      <span class=\"nt\">&lt;robot_type&gt;</span>nao_box_model<span class=\"nt\">&lt;/robot_type&gt;</span>\n    <span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>Internally, we need a way to keep parameters for both robots separate. Perhaps we can have an abstract base class called <code>robocup3ds::Robot</code> and two derived classes: <code>robocup3ds::Nao</code> and <code>robocup3ds::NaoBoxModel</code>.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2015-08-11T21:12:49.082367+00:00", "milestone": null, "updated_on": "2015-11-05T01:09:04.009506+00:00", "type": "issue", "id": 9}