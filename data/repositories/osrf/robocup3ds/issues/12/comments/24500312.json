{"links": {"self": {"href": "data/repositories/osrf/robocup3ds/issues/12/comments/24500312.json"}, "html": {"href": "#!/osrf/robocup3ds/issues/12#comment-24500312"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/robocup3ds/issues/12.json"}}, "type": "issue", "id": 12, "repository": {"links": {"self": {"href": "data/repositories/osrf/robocup3ds.json"}, "html": {"href": "#!/osrf/robocup3ds"}, "avatar": {"href": "data/bytebucket.org/ravatar/{920a9983-6b31-4842-b414-a2a01bf8a4e6}ts=c_plus_plus"}}, "type": "repository", "name": "robocup3ds", "full_name": "osrf/robocup3ds", "uuid": "{920a9983-6b31-4842-b414-a2a01bf8a4e6}"}, "title": "Deadlock in RCPServer::Send()"}, "content": {"raw": "Actually, it was not a deadlock. This was the problem:\n\n1. We receive data from a client and we call `DispatchRequestOnClientSocket()`.\n2. We find the socket that has reported activity and we call `Parse()`.\n3. `Parse()` was trying to read 4 bytes containing the length of the following s-expression:\n\n```\n#!c++\n\nint endianSize = recv(_socket, this->buffer, 4, 0);\n```\n\nHere's the problem because we don't have any guarantee that we're going to read the entire 4 bytes here. We could read `2` for example. The code assumed that we were reading 4 bytes. \n\nSee pull request #42 for a solution.\n\n@umscht , @jasonzliang Could you give it a shot to confirm that the patch fixes the problem? You would have to compile `robocup3d` from sources.", "markup": "markdown", "html": "<p>Actually, it was not a deadlock. This was the problem:</p>\n<ol>\n<li>We receive data from a client and we call <code>DispatchRequestOnClientSocket()</code>.</li>\n<li>We find the socket that has reported activity and we call <code>Parse()</code>.</li>\n<li><code>Parse()</code> was trying to read 4 bytes containing the length of the following s-expression:</li>\n</ol>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">int</span> <span class=\"n\">endianSize</span> <span class=\"o\">=</span> <span class=\"n\">recv</span><span class=\"p\">(</span><span class=\"n\">_socket</span><span class=\"p\">,</span> <span class=\"k\">this</span><span class=\"o\">-&gt;</span><span class=\"n\">buffer</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>Here's the problem because we don't have any guarantee that we're going to read the entire 4 bytes here. We could read <code>2</code> for example. The code assumed that we were reading 4 bytes. </p>\n<p>See <a href=\"#!/osrf/robocup3ds/pull-requests/42/fix-issue-12\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #42</a> for a solution.</p>\n<p>@umscht , @jasonzliang Could you give it a shot to confirm that the patch fixes the problem? You would have to compile <code>robocup3d</code> from sources.</p>", "type": "rendered"}, "created_on": "2016-01-06T01:17:21.839365+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2016-01-06T01:20:51.882204+00:00", "type": "issue_comment", "id": 24500312}