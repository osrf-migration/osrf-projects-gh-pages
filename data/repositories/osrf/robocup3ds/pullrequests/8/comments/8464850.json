{"links": {"self": {"href": "data/repositories/osrf/robocup3ds/pullrequests/8/comments/8464850.json"}, "html": {"href": "#!/osrf/robocup3ds/pull-requests/8/_/diff#comment-8464850"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 8, "links": {"self": {"href": "data/repositories/osrf/robocup3ds/pullrequests/8.json"}, "html": {"href": "#!/osrf/robocup3ds/pull-requests/8"}}, "title": "Nima_actionparser"}, "content": {"raw": "Hey Nima,\n\nI merged this branch into my integration branch jliang_model. I made some changes to how update is called (it now is called from the robocupplugin and only once every cycle) and removed some unnecessary functions. The code now compiles without any issues. You should merge my branch with yours and continue working from there. \n\nAlso, Effector_TEST is now not compiling due to the changes. I have commented it out for now. \n\nHere are some things yet to be done:\n\n-Parse the Say S-Expression and put in in gameState->say member variable (for this, you also need to do some additional checks, namely only one agent's message can be broadcasted, alternating between the teams every time effector->Update() is called. Also, you need to check that the message is no longer than 20 bytes long and that it contains only allowed characters). Set gameState->say.isValid to true if there is a legal message to send, else false otherwise.\n\n-Fix the Effector_TEST", "markup": "markdown", "html": "<p>Hey Nima,</p>\n<p>I merged this branch into my integration branch jliang_model. I made some changes to how update is called (it now is called from the robocupplugin and only once every cycle) and removed some unnecessary functions. The code now compiles without any issues. You should merge my branch with yours and continue working from there. </p>\n<p>Also, Effector_TEST is now not compiling due to the changes. I have commented it out for now. </p>\n<p>Here are some things yet to be done:</p>\n<p>-Parse the Say S-Expression and put in in gameState-&gt;say member variable (for this, you also need to do some additional checks, namely only one agent's message can be broadcasted, alternating between the teams every time effector-&gt;Update() is called. Also, you need to check that the message is no longer than 20 bytes long and that it contains only allowed characters). Set gameState-&gt;say.isValid to true if there is a legal message to send, else false otherwise.</p>\n<p>-Fix the Effector_TEST</p>", "type": "rendered"}, "created_on": "2015-07-23T01:19:49.351193+00:00", "user": {"display_name": "jasonzliang NA", "uuid": "{663c75f1-dde2-425c-aa25-68ad2f4eb5ec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B663c75f1-dde2-425c-aa25-68ad2f4eb5ec%7D"}, "html": {"href": "https://bitbucket.org/%7B663c75f1-dde2-425c-aa25-68ad2f4eb5ec%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:4f6d7230-9817-448e-8b0d-98cb3dd0821c/5b9c099e-6241-49a1-ba1d-fabcca24c6c3/128"}}, "nickname": "jasonzliang", "type": "user", "account_id": "557058:4f6d7230-9817-448e-8b0d-98cb3dd0821c"}, "updated_on": "2015-07-23T01:42:47.044780+00:00", "type": "pullrequest_comment", "id": 8464850}