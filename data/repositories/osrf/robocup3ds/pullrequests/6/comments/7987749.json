{"links": {"self": {"href": "data/repositories/osrf/robocup3ds/pullrequests/6/comments/7987749.json"}, "html": {"href": "#!/osrf/robocup3ds/pull-requests/6/_/diff#comment-7987749"}}, "parent": {"id": 7985066, "links": {"self": {"href": "data/repositories/osrf/robocup3ds/pullrequests/6/comments/7985066.json"}, "html": {"href": "#!/osrf/robocup3ds/pull-requests/6/_/diff#comment-7985066"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 6, "links": {"self": {"href": "data/repositories/osrf/robocup3ds/pullrequests/6.json"}, "html": {"href": "#!/osrf/robocup3ds/pull-requests/6"}}, "title": "TCP server"}, "content": {"raw": "Hi Jason,\nI checked our team's code, you are right, in the beginning of each message we added the length of S-expressions, I will use the following code for testing the parser in the client part of the Parser_test.cc in order to emulate the real agent.    \n\nbool send(const string& msg) {\n\n\tchar* out = (char*) msg.c_str();\n\tstrcpy(mBuffer + 4, out);\n\tunsigned int len = strlen(out) + 1;\n\tunsigned int netlen = htonl(len);\n\tmemcpy(mBuffer, &netlen, 4);\n\t\tint ret = write(socketfd, mBuffer, len + 4);\n\tfsync(sock.socketfd);\n\n\treturn ret;\n}\n\nFinally  map<std::string, double> will be used for parsing the joints command, I will use other structure that has already been developed in \"ActionParser\" branch to be used in parsing other messages such as Init message and scene Message.", "markup": "markdown", "html": "<p>Hi Jason,\nI checked our team's code, you are right, in the beginning of each message we added the length of S-expressions, I will use the following code for testing the parser in the client part of the Parser_test.cc in order to emulate the real agent.    </p>\n<p>bool send(const string&amp; msg) {</p>\n<div class=\"codehilite\"><pre><span></span>char* out = (char*) msg.c_str();\nstrcpy(mBuffer + 4, out);\nunsigned int len = strlen(out) + 1;\nunsigned int netlen = htonl(len);\nmemcpy(mBuffer, &amp;netlen, 4);\n    int ret = write(socketfd, mBuffer, len + 4);\nfsync(sock.socketfd);\n\nreturn ret;\n</pre></div>\n\n\n<p>}</p>\n<p>Finally  map&lt;std::string, double&gt; will be used for parsing the joints command, I will use other structure that has already been developed in \"ActionParser\" branch to be used in parsing other messages such as Init message and scene Message.</p>", "type": "rendered"}, "created_on": "2015-07-02T19:48:46.391667+00:00", "user": {"display_name": "nima shafii", "uuid": "{44717119-2661-4d7f-bedc-6945a1800c8d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44717119-2661-4d7f-bedc-6945a1800c8d%7D"}, "html": {"href": "https://bitbucket.org/%7B44717119-2661-4d7f-bedc-6945a1800c8d%7D/"}, "avatar": {"href": "https://bitbucket.org/account/nima_sh/avatar/"}}, "nickname": "nima_sh", "type": "user", "account_id": null}, "updated_on": "2015-07-03T05:36:46.638661+00:00", "type": "pullrequest_comment", "id": 7987749}