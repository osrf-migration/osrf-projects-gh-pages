{"links": {"self": {"href": "data/repositories/osrf/robocup3ds/pullrequests/6/comments/7977922.json"}, "html": {"href": "#!/osrf/robocup3ds/pull-requests/6/_/diff#comment-7977922"}}, "parent": {"id": 7960563, "links": {"self": {"href": "data/repositories/osrf/robocup3ds/pullrequests/6/comments/7960563.json"}, "html": {"href": "#!/osrf/robocup3ds/pull-requests/6/_/diff#comment-7960563"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 6, "links": {"self": {"href": "data/repositories/osrf/robocup3ds/pullrequests/6.json"}, "html": {"href": "#!/osrf/robocup3ds/pull-requests/6"}}, "title": "TCP server"}, "content": {"raw": "The effector messages that a agent sends to the server can be found in the following link: http://simspark.sourceforge.net/wiki/index.php/Effectors. Each message has different attributes. So I have two ideas for its data structure:\n\n1st idea: Following the current implementation of the parser, we have different data structures for each message types, for example class InitMsg has been implemented for the \"init message\" (Its attribute are \"string rsgName\" and \"int robotType\"). We also have implemented an interface to access its values. \nSome where in simulator we should also handle the situation that the agent can send to messages, even in Simspark, if the agent does not send an effector of the joints, the simulator will execute its previous actions. In current version of the parser, The parser keep its previous state by using singleton call. In this case, if we pass a parse() method to the server class. I think we don't need its return since it will update and keep the parser class state. \n\n2nd idea: We will consider only the functionality of the parser class, it is simpler and we can use your proposed architecture. we can use map<string , string> for the out-put of the parser method. Here is the example of the input and output of the parser:\n\nS_expression sample: (he1 -10)... (init (unum 1) (teamname FCPOpp))... ( beam 1 0 0)\nOut_Put: {(\"he1\", \"-10\"), (\"init_unum\", \"1\"), ( \"init_teamname\", \"FCPOpp\"), (\"beam_x\", \"1\"), (\"beam_y\", \"2\"), (\"beam_y\", \"3\")}\n\nThen , we should interpret the results out side of the parser class.\n\nLet me know your opinion or if you have any other idea ? :)", "markup": "markdown", "html": "<p>The effector messages that a agent sends to the server can be found in the following link: <a href=\"http://simspark.sourceforge.net/wiki/index.php/Effectors\" rel=\"nofollow\" class=\"ap-connect-link\">http://simspark.sourceforge.net/wiki/index.php/Effectors</a>. Each message has different attributes. So I have two ideas for its data structure:</p>\n<p>1st idea: Following the current implementation of the parser, we have different data structures for each message types, for example class InitMsg has been implemented for the \"init message\" (Its attribute are \"string rsgName\" and \"int robotType\"). We also have implemented an interface to access its values. \nSome where in simulator we should also handle the situation that the agent can send to messages, even in Simspark, if the agent does not send an effector of the joints, the simulator will execute its previous actions. In current version of the parser, The parser keep its previous state by using singleton call. In this case, if we pass a parse() method to the server class. I think we don't need its return since it will update and keep the parser class state. </p>\n<p>2nd idea: We will consider only the functionality of the parser class, it is simpler and we can use your proposed architecture. we can use map&lt;string , string&gt; for the out-put of the parser method. Here is the example of the input and output of the parser:</p>\n<p>S_expression sample: (he1 -10)... (init (unum 1) (teamname FCPOpp))... ( beam 1 0 0)\nOut_Put: {(\"he1\", \"-10\"), (\"init_unum\", \"1\"), ( \"init_teamname\", \"FCPOpp\"), (\"beam_x\", \"1\"), (\"beam_y\", \"2\"), (\"beam_y\", \"3\")}</p>\n<p>Then , we should interpret the results out side of the parser class.</p>\n<p>Let me know your opinion or if you have any other idea ? :)</p>", "type": "rendered"}, "created_on": "2015-07-02T14:49:33.395786+00:00", "user": {"display_name": "nima shafii", "uuid": "{44717119-2661-4d7f-bedc-6945a1800c8d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B44717119-2661-4d7f-bedc-6945a1800c8d%7D"}, "html": {"href": "https://bitbucket.org/%7B44717119-2661-4d7f-bedc-6945a1800c8d%7D/"}, "avatar": {"href": "https://bitbucket.org/account/nima_sh/avatar/"}}, "nickname": "nima_sh", "type": "user", "account_id": null}, "updated_on": "2015-07-02T15:10:42.545183+00:00", "type": "pullrequest_comment", "id": 7977922}