{"links": {"self": {"href": "data/repositories/osrf/robocup3ds/pullrequests/6/comments/8385794.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/robocup3ds/diff/osrf/robocup3ds:None..None?path=src%2FServer.cc"}, "html": {"href": "#!/osrf/robocup3ds/pull-requests/6/_/diff#comment-8385794"}}, "parent": {"id": 8152515, "links": {"self": {"href": "data/repositories/osrf/robocup3ds/pullrequests/6/comments/8152515.json"}, "html": {"href": "#!/osrf/robocup3ds/pull-requests/6/_/diff#comment-8152515"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 6, "links": {"self": {"href": "data/repositories/osrf/robocup3ds/pullrequests/6.json"}, "html": {"href": "#!/osrf/robocup3ds/pull-requests/6"}}, "title": "TCP server"}, "content": {"raw": "As far as I know the `::` prefix is for specifying a global scope. Let's say you have something like this:\n\n```\n#!c++\n\nvoid Send()\n{\n  ...\n}\n\nclass MyClass\n{\n  void Send()\n  {\n    ...\n  }\n \n  void F1()\n  {\n    ::Send();\n  }   \n \n  void F2()\n  {\n    Send()\n  }\n};\n\nMyClass obj;\n\n// This method is executing the global Send() function.\nobj.F1();\n\n// This method is executing the Send() member function.\nobj.F2();\n```\n\nSo, not sure about using it here unless there's a conflict with other `send()` method. ", "markup": "markdown", "html": "<p>As far as I know the <code>::</code> prefix is for specifying a global scope. Let's say you have something like this:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"kt\">void</span> <span class=\"nf\">Send</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"p\">...</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyClass</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">void</span> <span class=\"n\">Send</span><span class=\"p\">()</span>\n  <span class=\"p\">{</span>\n    <span class=\"p\">...</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"kt\">void</span> <span class=\"n\">F1</span><span class=\"p\">()</span>\n  <span class=\"p\">{</span>\n    <span class=\"o\">::</span><span class=\"n\">Send</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>   \n\n  <span class=\"kt\">void</span> <span class=\"n\">F2</span><span class=\"p\">()</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">Send</span><span class=\"p\">()</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"n\">MyClass</span> <span class=\"n\">obj</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// This method is executing the global Send() function.</span>\n<span class=\"n\">obj</span><span class=\"p\">.</span><span class=\"n\">F1</span><span class=\"p\">();</span>\n\n<span class=\"c1\">// This method is executing the Send() member function.</span>\n<span class=\"n\">obj</span><span class=\"p\">.</span><span class=\"n\">F2</span><span class=\"p\">();</span>\n</pre></div>\n\n\n<p>So, not sure about using it here unless there's a conflict with other <code>send()</code> method. </p>", "type": "rendered"}, "created_on": "2015-07-20T17:54:47.419084+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": null, "from": null, "outdated": false, "path": "src/Server.cc"}, "updated_on": "2015-07-20T17:54:47.425849+00:00", "type": "pullrequest_comment", "id": 8385794}