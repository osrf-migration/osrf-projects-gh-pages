{"rendered": {"description": {"raw": "Add several pick/drop target areas around the map.\r\n\r\nPass `d=true` when generating the world from ERB so the world has visuals for debugging:\r\n\r\n* A red box for each target area\r\n* A blue cylinder for each target area's minimum point\r\n* A green cylinder for each target area's maximum point\r\n\r\n![dropareas.gif](data/bitbucket.org/repo/gkR8znK/images/1739583596-dropareas.gif)\r\n\r\n## Areas\r\n\r\n* Rooms with closed doors can't be targets\r\n* Most room's areas are the whole space inside of the room\r\n* Bathrooms are the only rooms whose areas are outside of the door, so the robot doesn't need to enter the bathroom with the guest\r\n\r\n![areas_2.png](data/bitbucket.org/repo/gkR8znK/images/1293238926-areas_2.png)\r\n\r\n* The private cubicles areas consist of the whole cubicle (probably too hard to get in) and a 1m rectangle in front of the cubicle\r\n\r\n![area_cubicles.png](data/bitbucket.org/repo/gkR8znK/images/3044902187-area_cubicles.png)\r\n\r\n* The public cubicle areas consist of a rectangle around them:\r\n\r\n![areas_3.png](data/bitbucket.org/repo/gkR8znK/images/924170597-areas_3.png)\r\n\r\n* The front entrance consists of 3 separate areas:\r\n\r\n![areas_4.png](data/bitbucket.org/repo/gkR8znK/images/2252747865-areas_4.png)\r\n\r\n## Service\r\n\r\nI added instructions to the wiki's [API](#!/osrf/servicesim/wiki/API) and [walkthrough](#!/osrf/servicesim/wiki/Walkthrough). Try calling like this for example:\r\n\r\n    rosservice call /servicesim/room_info PrivateCafe\r\n\r\n## Guest / robot placement\r\n\r\nEach room has a placement point where the guest or robot can be spawned at startup. These are visible as orange cylinders on the debug world:\r\n\r\n![locations2.png](data/bitbucket.org/repo/gkR8znK/images/834612935-locations2.png)\r\n\r\nOther locations:\r\n\r\n* Guest initial pose (yellow)\r\n\r\n* Drop-off room (magenta)\r\n\r\n* Robot start pose (cyan) - **TODO** robot is not being spawned there yet, must sync this with URDF\r\n\r\n![locations.png](data/bitbucket.org/repo/gkR8znK/images/2940860510-locations.png)", "markup": "markdown", "html": "<p>Add several pick/drop target areas around the map.</p>\n<p>Pass <code>d=true</code> when generating the world from ERB so the world has visuals for debugging:</p>\n<ul>\n<li>A red box for each target area</li>\n<li>A blue cylinder for each target area's minimum point</li>\n<li>A green cylinder for each target area's maximum point</li>\n</ul>\n<p><img alt=\"dropareas.gif\" src=\"data/bitbucket.org/repo/gkR8znK/images/1739583596-dropareas.gif\" /></p>\n<h2 id=\"markdown-header-areas\">Areas</h2>\n<ul>\n<li>Rooms with closed doors can't be targets</li>\n<li>Most room's areas are the whole space inside of the room</li>\n<li>Bathrooms are the only rooms whose areas are outside of the door, so the robot doesn't need to enter the bathroom with the guest</li>\n</ul>\n<p><img alt=\"areas_2.png\" src=\"data/bitbucket.org/repo/gkR8znK/images/1293238926-areas_2.png\" /></p>\n<ul>\n<li>The private cubicles areas consist of the whole cubicle (probably too hard to get in) and a 1m rectangle in front of the cubicle</li>\n</ul>\n<p><img alt=\"area_cubicles.png\" src=\"data/bitbucket.org/repo/gkR8znK/images/3044902187-area_cubicles.png\" /></p>\n<ul>\n<li>The public cubicle areas consist of a rectangle around them:</li>\n</ul>\n<p><img alt=\"areas_3.png\" src=\"data/bitbucket.org/repo/gkR8znK/images/924170597-areas_3.png\" /></p>\n<ul>\n<li>The front entrance consists of 3 separate areas:</li>\n</ul>\n<p><img alt=\"areas_4.png\" src=\"data/bitbucket.org/repo/gkR8znK/images/2252747865-areas_4.png\" /></p>\n<h2 id=\"markdown-header-service\">Service</h2>\n<p>I added instructions to the wiki's <a data-is-external-link=\"true\" href=\"#!/osrf/servicesim/wiki/API\" rel=\"nofollow\">API</a> and <a data-is-external-link=\"true\" href=\"#!/osrf/servicesim/wiki/Walkthrough\" rel=\"nofollow\">walkthrough</a>. Try calling like this for example:</p>\n<div class=\"codehilite\"><pre><span></span>rosservice call /servicesim/room_info PrivateCafe\n</pre></div>\n\n\n<h2 id=\"markdown-header-guest-robot-placement\">Guest / robot placement</h2>\n<p>Each room has a placement point where the guest or robot can be spawned at startup. These are visible as orange cylinders on the debug world:</p>\n<p><img alt=\"locations2.png\" src=\"data/bitbucket.org/repo/gkR8znK/images/834612935-locations2.png\" /></p>\n<p>Other locations:</p>\n<ul>\n<li>\n<p>Guest initial pose (yellow)</p>\n</li>\n<li>\n<p>Drop-off room (magenta)</p>\n</li>\n<li>\n<p>Robot start pose (cyan) - <strong>TODO</strong> robot is not being spawned there yet, must sync this with URDF</p>\n</li>\n</ul>\n<p><img alt=\"locations.png\" src=\"data/bitbucket.org/repo/gkR8znK/images/2940860510-locations.png\" /></p>", "type": "rendered"}, "title": {"raw": "Room names", "markup": "markdown", "html": "<p>Room names</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Add several pick/drop target areas around the map.\r\n\r\nPass `d=true` when generating the world from ERB so the world has visuals for debugging:\r\n\r\n* A red box for each target area\r\n* A blue cylinder for each target area's minimum point\r\n* A green cylinder for each target area's maximum point\r\n\r\n![dropareas.gif](data/bitbucket.org/repo/gkR8znK/images/1739583596-dropareas.gif)\r\n\r\n## Areas\r\n\r\n* Rooms with closed doors can't be targets\r\n* Most room's areas are the whole space inside of the room\r\n* Bathrooms are the only rooms whose areas are outside of the door, so the robot doesn't need to enter the bathroom with the guest\r\n\r\n![areas_2.png](data/bitbucket.org/repo/gkR8znK/images/1293238926-areas_2.png)\r\n\r\n* The private cubicles areas consist of the whole cubicle (probably too hard to get in) and a 1m rectangle in front of the cubicle\r\n\r\n![area_cubicles.png](data/bitbucket.org/repo/gkR8znK/images/3044902187-area_cubicles.png)\r\n\r\n* The public cubicle areas consist of a rectangle around them:\r\n\r\n![areas_3.png](data/bitbucket.org/repo/gkR8znK/images/924170597-areas_3.png)\r\n\r\n* The front entrance consists of 3 separate areas:\r\n\r\n![areas_4.png](data/bitbucket.org/repo/gkR8znK/images/2252747865-areas_4.png)\r\n\r\n## Service\r\n\r\nI added instructions to the wiki's [API](#!/osrf/servicesim/wiki/API) and [walkthrough](#!/osrf/servicesim/wiki/Walkthrough). Try calling like this for example:\r\n\r\n    rosservice call /servicesim/room_info PrivateCafe\r\n\r\n## Guest / robot placement\r\n\r\nEach room has a placement point where the guest or robot can be spawned at startup. These are visible as orange cylinders on the debug world:\r\n\r\n![locations2.png](data/bitbucket.org/repo/gkR8znK/images/834612935-locations2.png)\r\n\r\nOther locations:\r\n\r\n* Guest initial pose (yellow)\r\n\r\n* Drop-off room (magenta)\r\n\r\n* Robot start pose (cyan) - **TODO** robot is not being spawned there yet, must sync this with URDF\r\n\r\n![locations.png](data/bitbucket.org/repo/gkR8znK/images/2940860510-locations.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/servicesim/pullrequests/44/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/servicesim/diffstat/osrf/servicesim:9501a7c7752e%0D4a5634c7b237?from_pullrequest_id=44"}, "commits": {"href": "data/repositories/osrf/servicesim/pullrequests/44/commits.json"}, "self": {"href": "data/repositories/osrf/servicesim/pullrequests/44.json"}, "comments": {"href": "data/repositories/osrf/servicesim/pullrequests/44/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/servicesim/pullrequests/44/merge"}, "html": {"href": "#!/osrf/servicesim/pull-requests/44"}, "activity": {"href": "data/repositories/osrf/servicesim/pullrequests/44/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/servicesim/diff/osrf/servicesim:9501a7c7752e%0D4a5634c7b237?from_pullrequest_id=44"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/servicesim/pullrequests/44/approve"}, "statuses": {"href": "data/repositories/osrf/servicesim/pullrequests/44/statuses_page=1.json"}}, "title": "Room names", "close_source_branch": true, "reviewers": [], "id": 44, "destination": {"commit": {"hash": "4a5634c7b237", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/servicesim/commit/4a5634c7b237.json"}, "html": {"href": "#!/osrf/servicesim/commits/4a5634c7b237"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/servicesim.json"}, "html": {"href": "#!/osrf/servicesim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f537f5a-62ec-4117-968f-73e9064ad028}ts=c_plus_plus"}}, "type": "repository", "name": "servicesim", "full_name": "osrf/servicesim", "uuid": "{3f537f5a-62ec-4117-968f-73e9064ad028}"}, "branch": {"name": "default"}}, "created_on": "2018-02-19T00:41:45.972790+00:00", "summary": {"raw": "Add several pick/drop target areas around the map.\r\n\r\nPass `d=true` when generating the world from ERB so the world has visuals for debugging:\r\n\r\n* A red box for each target area\r\n* A blue cylinder for each target area's minimum point\r\n* A green cylinder for each target area's maximum point\r\n\r\n![dropareas.gif](data/bitbucket.org/repo/gkR8znK/images/1739583596-dropareas.gif)\r\n\r\n## Areas\r\n\r\n* Rooms with closed doors can't be targets\r\n* Most room's areas are the whole space inside of the room\r\n* Bathrooms are the only rooms whose areas are outside of the door, so the robot doesn't need to enter the bathroom with the guest\r\n\r\n![areas_2.png](data/bitbucket.org/repo/gkR8znK/images/1293238926-areas_2.png)\r\n\r\n* The private cubicles areas consist of the whole cubicle (probably too hard to get in) and a 1m rectangle in front of the cubicle\r\n\r\n![area_cubicles.png](data/bitbucket.org/repo/gkR8znK/images/3044902187-area_cubicles.png)\r\n\r\n* The public cubicle areas consist of a rectangle around them:\r\n\r\n![areas_3.png](data/bitbucket.org/repo/gkR8znK/images/924170597-areas_3.png)\r\n\r\n* The front entrance consists of 3 separate areas:\r\n\r\n![areas_4.png](data/bitbucket.org/repo/gkR8znK/images/2252747865-areas_4.png)\r\n\r\n## Service\r\n\r\nI added instructions to the wiki's [API](#!/osrf/servicesim/wiki/API) and [walkthrough](#!/osrf/servicesim/wiki/Walkthrough). Try calling like this for example:\r\n\r\n    rosservice call /servicesim/room_info PrivateCafe\r\n\r\n## Guest / robot placement\r\n\r\nEach room has a placement point where the guest or robot can be spawned at startup. These are visible as orange cylinders on the debug world:\r\n\r\n![locations2.png](data/bitbucket.org/repo/gkR8znK/images/834612935-locations2.png)\r\n\r\nOther locations:\r\n\r\n* Guest initial pose (yellow)\r\n\r\n* Drop-off room (magenta)\r\n\r\n* Robot start pose (cyan) - **TODO** robot is not being spawned there yet, must sync this with URDF\r\n\r\n![locations.png](data/bitbucket.org/repo/gkR8znK/images/2940860510-locations.png)", "markup": "markdown", "html": "<p>Add several pick/drop target areas around the map.</p>\n<p>Pass <code>d=true</code> when generating the world from ERB so the world has visuals for debugging:</p>\n<ul>\n<li>A red box for each target area</li>\n<li>A blue cylinder for each target area's minimum point</li>\n<li>A green cylinder for each target area's maximum point</li>\n</ul>\n<p><img alt=\"dropareas.gif\" src=\"data/bitbucket.org/repo/gkR8znK/images/1739583596-dropareas.gif\" /></p>\n<h2 id=\"markdown-header-areas\">Areas</h2>\n<ul>\n<li>Rooms with closed doors can't be targets</li>\n<li>Most room's areas are the whole space inside of the room</li>\n<li>Bathrooms are the only rooms whose areas are outside of the door, so the robot doesn't need to enter the bathroom with the guest</li>\n</ul>\n<p><img alt=\"areas_2.png\" src=\"data/bitbucket.org/repo/gkR8znK/images/1293238926-areas_2.png\" /></p>\n<ul>\n<li>The private cubicles areas consist of the whole cubicle (probably too hard to get in) and a 1m rectangle in front of the cubicle</li>\n</ul>\n<p><img alt=\"area_cubicles.png\" src=\"data/bitbucket.org/repo/gkR8znK/images/3044902187-area_cubicles.png\" /></p>\n<ul>\n<li>The public cubicle areas consist of a rectangle around them:</li>\n</ul>\n<p><img alt=\"areas_3.png\" src=\"data/bitbucket.org/repo/gkR8znK/images/924170597-areas_3.png\" /></p>\n<ul>\n<li>The front entrance consists of 3 separate areas:</li>\n</ul>\n<p><img alt=\"areas_4.png\" src=\"data/bitbucket.org/repo/gkR8znK/images/2252747865-areas_4.png\" /></p>\n<h2 id=\"markdown-header-service\">Service</h2>\n<p>I added instructions to the wiki's <a data-is-external-link=\"true\" href=\"#!/osrf/servicesim/wiki/API\" rel=\"nofollow\">API</a> and <a data-is-external-link=\"true\" href=\"#!/osrf/servicesim/wiki/Walkthrough\" rel=\"nofollow\">walkthrough</a>. Try calling like this for example:</p>\n<div class=\"codehilite\"><pre><span></span>rosservice call /servicesim/room_info PrivateCafe\n</pre></div>\n\n\n<h2 id=\"markdown-header-guest-robot-placement\">Guest / robot placement</h2>\n<p>Each room has a placement point where the guest or robot can be spawned at startup. These are visible as orange cylinders on the debug world:</p>\n<p><img alt=\"locations2.png\" src=\"data/bitbucket.org/repo/gkR8znK/images/834612935-locations2.png\" /></p>\n<p>Other locations:</p>\n<ul>\n<li>\n<p>Guest initial pose (yellow)</p>\n</li>\n<li>\n<p>Drop-off room (magenta)</p>\n</li>\n<li>\n<p>Robot start pose (cyan) - <strong>TODO</strong> robot is not being spawned there yet, must sync this with URDF</p>\n</li>\n</ul>\n<p><img alt=\"locations.png\" src=\"data/bitbucket.org/repo/gkR8znK/images/2940860510-locations.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "fd84cbd322bc", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/servicesim/commit/fd84cbd322bc.json"}, "html": {"href": "#!/osrf/servicesim/commits/fd84cbd322bc"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/servicesim.json"}, "html": {"href": "#!/osrf/servicesim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f537f5a-62ec-4117-968f-73e9064ad028}ts=c_plus_plus"}}, "type": "repository", "name": "servicesim", "full_name": "osrf/servicesim", "uuid": "{3f537f5a-62ec-4117-968f-73e9064ad028}"}, "branch": {"name": "room_names"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-02-21T21:17:42.918479+00:00", "type": "participant", "approved": false, "user": {"display_name": "mikaelarguedas", "uuid": "{85949490-7d6b-4fd5-9d44-69f087bbe838}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B85949490-7d6b-4fd5-9d44-69f087bbe838%7D"}, "html": {"href": "https://bitbucket.org/%7B85949490-7d6b-4fd5-9d44-69f087bbe838%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:7fdd80d3-bc91-4743-83b3-dfaf89946270/90150a0f-25c1-4190-a5ae-408a50b6f652/128"}}, "nickname": "mikaelarguedas", "type": "user", "account_id": "557058:7fdd80d3-bc91-4743-83b3-dfaf89946270"}}, {"role": "PARTICIPANT", "participated_on": "2018-02-21T21:16:57.261291+00:00", "type": "participant", "approved": true, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2018-02-21T21:17:42.944432+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "9501a7c7752e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/servicesim/commit/9501a7c7752e.json"}, "html": {"href": "#!/osrf/servicesim/commits/9501a7c7752e"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}