{"links": {"self": {"href": "data/repositories/osrf/servicesim/pullrequests/51/comments/56803625.json"}, "html": {"href": "#!/osrf/servicesim/pull-requests/51/_/diff#comment-56803625"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 51, "links": {"self": {"href": "data/repositories/osrf/servicesim/pullrequests/51.json"}, "html": {"href": "#!/osrf/servicesim/pull-requests/51"}}, "title": "RFID"}, "content": {"raw": "Thanks for the follow-up! a few remarks:\n- the TODO I was thinking of adding a `RobotNamespace` tag to match the behavior of the other gazebo_ros plugins as the namespace used on the ROS side may not match the sdf model name. Though it's not a blocker as for now as we expect them to be the same for this competition.\n- I construct the list of actors on Load for performance reasons. That may not hold if we decide to implement an alternative behavior for the guest when they reach drop_off point (more details below)\n- We should document that the threshold should match the one used in the competition plugin for guest pickup, not sure what the best place for that is\n\nDetails about Actors list:\nWe discussed with @chapulina alternatives to get the guest out of the way once being droped off. My suggestion would be to do a videogame style animation: the robot cannot move and the guest magically gets to the right spot that is out of the way.\nA way to do so would be to delete the guest model and to spawn another model sitting on a chair or whatever in the meeting room, this way the robot has room to get out. The tricky part about that is that the plugin will have no knowledge of the new actor spawned so won;t publish info about it. That could be ok as we dont expect this guest to ever move after that (of the robot to have to use RFID if the competition is always a single guest pickup + dropoff) but I think it's worth mentioning.", "markup": "markdown", "html": "<p>Thanks for the follow-up! a few remarks:\n- the TODO I was thinking of adding a <code>RobotNamespace</code> tag to match the behavior of the other gazebo_ros plugins as the namespace used on the ROS side may not match the sdf model name. Though it's not a blocker as for now as we expect them to be the same for this competition.\n- I construct the list of actors on Load for performance reasons. That may not hold if we decide to implement an alternative behavior for the guest when they reach drop_off point (more details below)\n- We should document that the threshold should match the one used in the competition plugin for guest pickup, not sure what the best place for that is</p>\n<p>Details about Actors list:\nWe discussed with @chapulina alternatives to get the guest out of the way once being droped off. My suggestion would be to do a videogame style animation: the robot cannot move and the guest magically gets to the right spot that is out of the way.\nA way to do so would be to delete the guest model and to spawn another model sitting on a chair or whatever in the meeting room, this way the robot has room to get out. The tricky part about that is that the plugin will have no knowledge of the new actor spawned so won;t publish info about it. That could be ok as we dont expect this guest to ever move after that (of the robot to have to use RFID if the competition is always a single guest pickup + dropoff) but I think it's worth mentioning.</p>", "type": "rendered"}, "created_on": "2018-02-20T17:18:42.568962+00:00", "user": {"display_name": "mikaelarguedas", "uuid": "{85949490-7d6b-4fd5-9d44-69f087bbe838}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B85949490-7d6b-4fd5-9d44-69f087bbe838%7D"}, "html": {"href": "https://bitbucket.org/%7B85949490-7d6b-4fd5-9d44-69f087bbe838%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:7fdd80d3-bc91-4743-83b3-dfaf89946270/90150a0f-25c1-4190-a5ae-408a50b6f652/128"}}, "nickname": "mikaelarguedas", "type": "user", "account_id": "557058:7fdd80d3-bc91-4743-83b3-dfaf89946270"}, "updated_on": "2018-02-20T17:18:42.582540+00:00", "type": "pullrequest_comment", "id": 56803625}