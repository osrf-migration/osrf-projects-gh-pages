{"rendered": {"description": {"raw": "This builds on top of pull request #44\r\n\r\n### Motivation\r\n\r\nWe need to spawn the robot at a specific location in the world, and we also need to create a checkpoint on that location. It would also be nice to have that location automatically picked as the world file is generated.\r\n\r\nCurrently, the robot spawn coordinates are being passed to a `spawn_model` node on `servicesim.launch`, but the coordinates are being generated and passed to plugins on `service.world.erb`.\r\n\r\nThis pull request moves the spawn logic to the world SDF file so that the robot is spawned in the appropriate location without the need to keep multiple generated files in sync.\r\n\r\n### Approach\r\n\r\nTo find a model includes in the world using an `<include>` tag and a uri in the `model://robotname` format, Gazebo needs:\r\n\r\n1. To find a `model.config` file within one of the `<path>`s in `GAZEBO_MODEL_PATH`: `<path>/robotname/model.config`\r\n1. To find the meshes which take the format `model://...../*.obj` also within a `GAZEBO_MODEL_PATH`.\r\n\r\nSince the URDF parsing translates `package://servicebot_description/meshes` to `model://servicebot_description/meshes`, we need the parent directory of `servicebot_description` to be in the path to satisfy 2.\r\n\r\nSo we might as well also add our `model.config` file under `servicebot_description` because that will be in the path.\r\n\r\nSo:\r\n\r\n1. Add a `model.config` to the `*_description` package and point to the `urdf/*.urdf` model in `<sdf>`\r\n1. Pass the parent dir of `*_description` to `GAZEBO_MODEL_PATH`\r\n1. Include `model://*_description` in the SDF world", "markup": "markdown", "html": "<p>This builds on top of <a href=\"#!/osrf/servicesim/pull-requests/44/room-names\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #44</a></p>\n<h3 id=\"markdown-header-motivation\">Motivation</h3>\n<p>We need to spawn the robot at a specific location in the world, and we also need to create a checkpoint on that location. It would also be nice to have that location automatically picked as the world file is generated.</p>\n<p>Currently, the robot spawn coordinates are being passed to a <code>spawn_model</code> node on <code>servicesim.launch</code>, but the coordinates are being generated and passed to plugins on <code>service.world.erb</code>.</p>\n<p>This pull request moves the spawn logic to the world SDF file so that the robot is spawned in the appropriate location without the need to keep multiple generated files in sync.</p>\n<h3 id=\"markdown-header-approach\">Approach</h3>\n<p>To find a model includes in the world using an <code>&lt;include&gt;</code> tag and a uri in the <code>model://robotname</code> format, Gazebo needs:</p>\n<ol>\n<li>To find a <code>model.config</code> file within one of the <code>&lt;path&gt;</code>s in <code>GAZEBO_MODEL_PATH</code>: <code>&lt;path&gt;/robotname/model.config</code></li>\n<li>To find the meshes which take the format <code>model://...../*.obj</code> also within a <code>GAZEBO_MODEL_PATH</code>.</li>\n</ol>\n<p>Since the URDF parsing translates <code>package://servicebot_description/meshes</code> to <code>model://servicebot_description/meshes</code>, we need the parent directory of <code>servicebot_description</code> to be in the path to satisfy 2.</p>\n<p>So we might as well also add our <code>model.config</code> file under <code>servicebot_description</code> because that will be in the path.</p>\n<p>So:</p>\n<ol>\n<li>Add a <code>model.config</code> to the <code>*_description</code> package and point to the <code>urdf/*.urdf</code> model in <code>&lt;sdf&gt;</code></li>\n<li>Pass the parent dir of <code>*_description</code> to <code>GAZEBO_MODEL_PATH</code></li>\n<li>Include <code>model://*_description</code> in the SDF world</li>\n</ol>", "type": "rendered"}, "title": {"raw": "Include robot URDF into SDF world (remove spawn_model node)", "markup": "markdown", "html": "<p>Include robot URDF into SDF world (remove spawn_model node)</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This builds on top of pull request #44\r\n\r\n### Motivation\r\n\r\nWe need to spawn the robot at a specific location in the world, and we also need to create a checkpoint on that location. It would also be nice to have that location automatically picked as the world file is generated.\r\n\r\nCurrently, the robot spawn coordinates are being passed to a `spawn_model` node on `servicesim.launch`, but the coordinates are being generated and passed to plugins on `service.world.erb`.\r\n\r\nThis pull request moves the spawn logic to the world SDF file so that the robot is spawned in the appropriate location without the need to keep multiple generated files in sync.\r\n\r\n### Approach\r\n\r\nTo find a model includes in the world using an `<include>` tag and a uri in the `model://robotname` format, Gazebo needs:\r\n\r\n1. To find a `model.config` file within one of the `<path>`s in `GAZEBO_MODEL_PATH`: `<path>/robotname/model.config`\r\n1. To find the meshes which take the format `model://...../*.obj` also within a `GAZEBO_MODEL_PATH`.\r\n\r\nSince the URDF parsing translates `package://servicebot_description/meshes` to `model://servicebot_description/meshes`, we need the parent directory of `servicebot_description` to be in the path to satisfy 2.\r\n\r\nSo we might as well also add our `model.config` file under `servicebot_description` because that will be in the path.\r\n\r\nSo:\r\n\r\n1. Add a `model.config` to the `*_description` package and point to the `urdf/*.urdf` model in `<sdf>`\r\n1. Pass the parent dir of `*_description` to `GAZEBO_MODEL_PATH`\r\n1. Include `model://*_description` in the SDF world", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/servicesim/pullrequests/46/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/servicesim/diffstat/osrf/servicesim:5dba22e8da6c%0D9501a7c7752e?from_pullrequest_id=46"}, "commits": {"href": "data/repositories/osrf/servicesim/pullrequests/46/commits.json"}, "self": {"href": "data/repositories/osrf/servicesim/pullrequests/46.json"}, "comments": {"href": "data/repositories/osrf/servicesim/pullrequests/46/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/servicesim/pullrequests/46/merge"}, "html": {"href": "#!/osrf/servicesim/pull-requests/46"}, "activity": {"href": "data/repositories/osrf/servicesim/pullrequests/46/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/servicesim/diff/osrf/servicesim:5dba22e8da6c%0D9501a7c7752e?from_pullrequest_id=46"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/servicesim/pullrequests/46/approve"}, "statuses": {"href": "data/repositories/osrf/servicesim/pullrequests/46/statuses_page=1.json"}}, "title": "Include robot URDF into SDF world (remove spawn_model node)", "close_source_branch": true, "reviewers": [{"display_name": "mikaelarguedas", "uuid": "{85949490-7d6b-4fd5-9d44-69f087bbe838}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B85949490-7d6b-4fd5-9d44-69f087bbe838%7D"}, "html": {"href": "https://bitbucket.org/%7B85949490-7d6b-4fd5-9d44-69f087bbe838%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:7fdd80d3-bc91-4743-83b3-dfaf89946270/90150a0f-25c1-4190-a5ae-408a50b6f652/128"}}, "nickname": "mikaelarguedas", "type": "user", "account_id": "557058:7fdd80d3-bc91-4743-83b3-dfaf89946270"}], "id": 46, "destination": {"commit": {"hash": "9501a7c7752e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/servicesim/commit/9501a7c7752e.json"}, "html": {"href": "#!/osrf/servicesim/commits/9501a7c7752e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/servicesim.json"}, "html": {"href": "#!/osrf/servicesim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f537f5a-62ec-4117-968f-73e9064ad028}ts=c_plus_plus"}}, "type": "repository", "name": "servicesim", "full_name": "osrf/servicesim", "uuid": "{3f537f5a-62ec-4117-968f-73e9064ad028}"}, "branch": {"name": "default"}}, "created_on": "2018-02-19T19:58:58.298630+00:00", "summary": {"raw": "This builds on top of pull request #44\r\n\r\n### Motivation\r\n\r\nWe need to spawn the robot at a specific location in the world, and we also need to create a checkpoint on that location. It would also be nice to have that location automatically picked as the world file is generated.\r\n\r\nCurrently, the robot spawn coordinates are being passed to a `spawn_model` node on `servicesim.launch`, but the coordinates are being generated and passed to plugins on `service.world.erb`.\r\n\r\nThis pull request moves the spawn logic to the world SDF file so that the robot is spawned in the appropriate location without the need to keep multiple generated files in sync.\r\n\r\n### Approach\r\n\r\nTo find a model includes in the world using an `<include>` tag and a uri in the `model://robotname` format, Gazebo needs:\r\n\r\n1. To find a `model.config` file within one of the `<path>`s in `GAZEBO_MODEL_PATH`: `<path>/robotname/model.config`\r\n1. To find the meshes which take the format `model://...../*.obj` also within a `GAZEBO_MODEL_PATH`.\r\n\r\nSince the URDF parsing translates `package://servicebot_description/meshes` to `model://servicebot_description/meshes`, we need the parent directory of `servicebot_description` to be in the path to satisfy 2.\r\n\r\nSo we might as well also add our `model.config` file under `servicebot_description` because that will be in the path.\r\n\r\nSo:\r\n\r\n1. Add a `model.config` to the `*_description` package and point to the `urdf/*.urdf` model in `<sdf>`\r\n1. Pass the parent dir of `*_description` to `GAZEBO_MODEL_PATH`\r\n1. Include `model://*_description` in the SDF world", "markup": "markdown", "html": "<p>This builds on top of <a href=\"#!/osrf/servicesim/pull-requests/44/room-names\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #44</a></p>\n<h3 id=\"markdown-header-motivation\">Motivation</h3>\n<p>We need to spawn the robot at a specific location in the world, and we also need to create a checkpoint on that location. It would also be nice to have that location automatically picked as the world file is generated.</p>\n<p>Currently, the robot spawn coordinates are being passed to a <code>spawn_model</code> node on <code>servicesim.launch</code>, but the coordinates are being generated and passed to plugins on <code>service.world.erb</code>.</p>\n<p>This pull request moves the spawn logic to the world SDF file so that the robot is spawned in the appropriate location without the need to keep multiple generated files in sync.</p>\n<h3 id=\"markdown-header-approach\">Approach</h3>\n<p>To find a model includes in the world using an <code>&lt;include&gt;</code> tag and a uri in the <code>model://robotname</code> format, Gazebo needs:</p>\n<ol>\n<li>To find a <code>model.config</code> file within one of the <code>&lt;path&gt;</code>s in <code>GAZEBO_MODEL_PATH</code>: <code>&lt;path&gt;/robotname/model.config</code></li>\n<li>To find the meshes which take the format <code>model://...../*.obj</code> also within a <code>GAZEBO_MODEL_PATH</code>.</li>\n</ol>\n<p>Since the URDF parsing translates <code>package://servicebot_description/meshes</code> to <code>model://servicebot_description/meshes</code>, we need the parent directory of <code>servicebot_description</code> to be in the path to satisfy 2.</p>\n<p>So we might as well also add our <code>model.config</code> file under <code>servicebot_description</code> because that will be in the path.</p>\n<p>So:</p>\n<ol>\n<li>Add a <code>model.config</code> to the <code>*_description</code> package and point to the <code>urdf/*.urdf</code> model in <code>&lt;sdf&gt;</code></li>\n<li>Pass the parent dir of <code>*_description</code> to <code>GAZEBO_MODEL_PATH</code></li>\n<li>Include <code>model://*_description</code> in the SDF world</li>\n</ol>", "type": "rendered"}, "source": {"commit": {"hash": "0fe505c8f16d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/servicesim/commit/0fe505c8f16d.json"}, "html": {"href": "#!/osrf/servicesim/commits/0fe505c8f16d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/servicesim.json"}, "html": {"href": "#!/osrf/servicesim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f537f5a-62ec-4117-968f-73e9064ad028}ts=c_plus_plus"}}, "type": "repository", "name": "servicesim", "full_name": "osrf/servicesim", "uuid": "{3f537f5a-62ec-4117-968f-73e9064ad028}"}, "branch": {"name": "include_urdf"}}, "comment_count": 9, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2018-02-22T02:12:56.337726+00:00", "type": "participant", "approved": true, "user": {"display_name": "mikaelarguedas", "uuid": "{85949490-7d6b-4fd5-9d44-69f087bbe838}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B85949490-7d6b-4fd5-9d44-69f087bbe838%7D"}, "html": {"href": "https://bitbucket.org/%7B85949490-7d6b-4fd5-9d44-69f087bbe838%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:7fdd80d3-bc91-4743-83b3-dfaf89946270/90150a0f-25c1-4190-a5ae-408a50b6f652/128"}}, "nickname": "mikaelarguedas", "type": "user", "account_id": "557058:7fdd80d3-bc91-4743-83b3-dfaf89946270"}}, {"role": "PARTICIPANT", "participated_on": "2018-02-22T21:20:26.098875+00:00", "type": "participant", "approved": false, "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}], "reason": "", "updated_on": "2018-02-22T21:20:26.226652+00:00", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "merge_commit": {"hash": "5dba22e8da6c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/servicesim/commit/5dba22e8da6c.json"}, "html": {"href": "#!/osrf/servicesim/commits/5dba22e8da6c"}}}, "closed_by": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}}