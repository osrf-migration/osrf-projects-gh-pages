{"links": {"self": {"href": "data/repositories/osrf/servicesim/pullrequests/89/comments/58121039.json"}, "html": {"href": "#!/osrf/servicesim/pull-requests/89/_/diff#comment-58121039"}}, "parent": {"id": 58120902, "links": {"self": {"href": "data/repositories/osrf/servicesim/pullrequests/89/comments/58120902.json"}, "html": {"href": "#!/osrf/servicesim/pull-requests/89/_/diff#comment-58120902"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 89, "links": {"self": {"href": "data/repositories/osrf/servicesim/pullrequests/89.json"}, "html": {"href": "#!/osrf/servicesim/pull-requests/89"}}, "title": "Added rostest for testing /servicesim/new_task calls"}, "content": {"raw": "Yeah I think I never got a test failure at that point. In general, such a situation would be a test expectation, for example:\n\n`EXPECT_TRUE(pickup_flag && spawn_robot_flag && spawn_guest_flag)`\n\nWe want the test to fail if the drop off fails ;)\n\n", "markup": "markdown", "html": "<p>Yeah I think I never got a test failure at that point. In general, such a situation would be a test expectation, for example:</p>\n<p><code>EXPECT_TRUE(pickup_flag &amp;&amp; spawn_robot_flag &amp;&amp; spawn_guest_flag)</code></p>\n<p>We want the test to fail if the drop off fails ;)</p>", "type": "rendered"}, "created_on": "2018-03-07T02:14:32.571950+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2018-03-07T02:14:32.574706+00:00", "type": "pullrequest_comment", "id": 58121039}